<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>老杨说</title>
  
  <subtitle>思考和写作</subtitle>
  <link href="https://jamesyyang.github.io/atom.xml" rel="self"/>
  
  <link href="https://jamesyyang.github.io/"/>
  <updated>2023-09-28T01:15:45.763Z</updated>
  <id>https://jamesyyang.github.io/</id>
  
  <author>
    <name>James Yang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>纯银谈管理经验</title>
    <link href="https://jamesyyang.github.io/2023/09/28/team-management-chunyin/"/>
    <id>https://jamesyyang.github.io/2023/09/28/team-management-chunyin/</id>
    <published>2023-09-28T00:33:24.000Z</published>
    <updated>2023-09-28T01:15:45.763Z</updated>
    
    <content type="html"><![CDATA[<p>看到最近<code>纯银</code>写的他的管理经验，觉得总结的挺好的，分享大家看看。</p><span id="more"></span><hr><p>7月，在顾问的公司跟产品leader讲管理经验，讲着讲着，想起来我合作过的两个同事，他们在管理上的失败经验。</p><p>两个同事都是极其优秀的业务单兵，个人效率和质量无可挑剔。</p><p>同事A，一直单挑业务大梁,后来萌生退意，找了一个天赋不错的一两年经验的新人，盯着他做了一两个月，就把手头上的事情分批交过去。这显然超出了新人的负载能力，一时间鸡飞狗跳，直到这一次创业挂掉为止。</p><p>同事B，打算从单挑业务大梁转移到管理角色上，招了4个人各司其职，结果1+4&lt;5，研发效率大约相当于1.8个同事B。看起来新人都很忙，经常加班，但每个人其实只负责一小块领地，bug层出不穷，效率也老牛推车。我很确定B一两周能完成的事儿，新人(来了半年之后)一个月都做不完。</p><p>看上去，A和B都希望复制自己的几个分身，但未能如愿。</p><p>“复制自己的几个分身”也是管理上的大忌，而我的团队管理逻辑是是，把做产品分成五个步骤。</p><ol><li>确定正确的目标</li><li>在目标之下，从庞杂的信息里梳理出清晰的逻辑线</li><li>在逻辑线之下，划分阶段性重点，再分解出来环环相扣的任务</li><li>完成任务</li><li>对任务复盘，修正环环相扣的路径，甚至修正逻辑线与目标，发起下一个距离目标的弹道更准确的任务</li></ol><p>如果管理对象是优秀的P7，那么我来做1-2，我和他一起做3-5，他独立完成4。</p><p>如果管理对象是优秀的P6，那么我来做1-2-3-5，他独立完成4。</p><p>如果管理对象是合格或者不那么合格的P6，或者任务难度过高，那么我除了做1-2-3-5之外，还会把复杂任务的难点打下来，再交给他完成4。</p><p>总之，分解步骤，根据对象和任务的情况，我来分担一部分(最难也是最重要的)职责，确保效率与质量，再把耗费大量时间，但难度在对方承受范围内的职责交出去。</p><p>这就是我教给产品leader的经验之谈。这个方法，几乎是我为自己定制的，鲜见有人使用。大多数主管总是希望招到自己的分身，独当一面，为自己分担压力。但以我所见，哪来这么多的“独当一面”，更多的情况是A级招B级，B级招C级，C级招D级，但全都要求下属独当一面，又当不住，效率和质量打着滚地跌落悬崖。</p><p>独当一面，本质上是管理者的偷懒行为，希望付出尽可能低的管理成本，仅仅是利用好奖惩规则就能做好管理职责。</p><p>而偷懒的结果是任务每向下传递一层，效率和质量就低一档；又或者管理者传递下去的原本是阶段性目标错误的任务，因为他对实现过程不深入不了解，便把实现不好甩锅给下属执行不力。</p><hr><p>其实这段总结里，最重要就是讲了两个方面：</p><ol><li>你得会做任务分解，也就是他说的5个步骤。任务分解的好坏直接决定了这个事情推进的效率。好的任务分解应该是：<code>逻辑清晰的、相互独立的</code>。</li><li>任务的安排，要因人而异。能力强的下属就多让他担当一些，能力弱的就多给予帮助。但是，<code>目标和任务分解</code>需要自己来。</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;看到最近&lt;code&gt;纯银&lt;/code&gt;写的他的管理经验，觉得总结的挺好的，分享大家看看。&lt;/p&gt;</summary>
    
    
    
    <category term="团队如何带" scheme="https://jamesyyang.github.io/categories/%E5%9B%A2%E9%98%9F%E5%A6%82%E4%BD%95%E5%B8%A6/"/>
    
    
    <category term="管理" scheme="https://jamesyyang.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>思考的框架--笔记</title>
    <link href="https://jamesyyang.github.io/2023/09/18/cognition-thinking-concepts/"/>
    <id>https://jamesyyang.github.io/2023/09/18/cognition-thinking-concepts/</id>
    <published>2023-09-18T11:29:56.000Z</published>
    <updated>2023-09-18T11:40:38.573Z</updated>
    
    <content type="html"><![CDATA[<p>最近读了一本《思考的框架》，内容通俗易懂，书里把一些非常高效的思考方式做了总结，如果能够熟练运用，确实能够帮助我们提升思维的效率，进而增加自己的认知能力。</p><span id="more"></span><p>其实老外挺喜欢用<code>模式</code>这个东西来对一个事情做抽象的，比如：编程模式、建筑模式等等，现在又搞一个思维模式。</p><p>当然，不可否认的是，模式确实是一个好东西，能够把<code>事物的特征做很好的抽象，同时告诉我们何时能够复用</code>。这样效率就提升了，成功率也就提升了。</p><p>但是，就像书里说的第一个模式——地图不等于疆域本身——一样，我们要理解，<code>但凡是对客观的抽象，就一定会有部分的失真</code>，所以，运用任何模式，任何前人的经验的时候，都要知道适用场景、客观约束。否则就很容易掉坑。</p><p>对于内容的总结，找到一个书友总结的思维导图，非常好，盗用一下。</p><img src="/images/thinking-concepts.jpg" class="">]]></content>
    
    
    <summary type="html">&lt;p&gt;最近读了一本《思考的框架》，内容通俗易懂，书里把一些非常高效的思考方式做了总结，如果能够熟练运用，确实能够帮助我们提升思维的效率，进而增加自己的认知能力。&lt;/p&gt;</summary>
    
    
    
    <category term="认知杂说" scheme="https://jamesyyang.github.io/categories/%E8%AE%A4%E7%9F%A5%E6%9D%82%E8%AF%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>体验Midjourney局部重绘</title>
    <link href="https://jamesyyang.github.io/2023/09/07/ai-midjourney-region-md/"/>
    <id>https://jamesyyang.github.io/2023/09/07/ai-midjourney-region-md/</id>
    <published>2023-09-07T12:27:03.000Z</published>
    <updated>2023-09-07T12:38:31.119Z</updated>
    
    <content type="html"><![CDATA[<p>据说Midjourney出了一个炸裂的功能：局部重绘。今天有空来体验一下。</p><span id="more"></span><p>先画一个图（最近对林肯比较有好感呀^_^）。</p><p>Promot：<br><code>a orange lincoln Nautilus, driving on a road in desert, midday, sunny, realistic photograph, global illumination, depth of view --s 500</code></p><p>选了一张比较满意的</p><img src="/images/mj_lincoln_Nautilus.png" class=""><p>好，接下来就体验局部重绘了。要先打开<code>Setting</code>中的<code>Remix Mode</code>。</p><p>点击图片下方的<code>Vary(Region)</code>，再弹出的编辑框中选中一片区域后，直接把promot删了重写。<br><code>a beautify girl with long yellow hair, looking at the car</code></p><img src="/images/mj_region.png" class=""><p>看看效果把，确实比较惊艳，关键在于重绘的部分竟然毫无违和感。</p><img src="/images/mj_girl_lincoln.png" class="">]]></content>
    
    
    <summary type="html">&lt;p&gt;据说Midjourney出了一个炸裂的功能：局部重绘。今天有空来体验一下。&lt;/p&gt;</summary>
    
    
    
    <category term="AI" scheme="https://jamesyyang.github.io/categories/AI/"/>
    
    
    <category term="midjourney" scheme="https://jamesyyang.github.io/tags/midjourney/"/>
    
  </entry>
  
  <entry>
    <title>How to Do Great Work - 精简版</title>
    <link href="https://jamesyyang.github.io/2023/08/26/thinking-great-work/"/>
    <id>https://jamesyyang.github.io/2023/08/26/thinking-great-work/</id>
    <published>2023-08-26T00:06:05.000Z</published>
    <updated>2023-08-26T00:15:58.581Z</updated>
    
    <content type="html"><![CDATA[<p>七月，《黑客与画家》的作者 Paul Graham 发布了一篇博客，<a href="http://paulgraham.com/greatwork.html">如何成就卓越</a>。据说他这篇文章，写了半年之久。</p><p>他用两万字解答一个问题，<code>不同领域，很多人做出了伟大的事业，我们是否能从中找到交集，找到有关工作、人生、世界的答案，指引自己做出优秀的工作？</code></p><p>下面是小盖同学整理的精简版，挺好的，转给大家看看。</p><span id="more"></span><p>1、怎样才能做出伟大的事业？凡是世俗评价成功的人都被问过这个问题，前有牛顿、爱迪生、爱因斯坦，现有比尔盖茨、乔布斯、马斯克、Altman，所有回答里必然出现同一个字眼，“努力”。这个答案给所有人错觉，只要努力你就能做成伟大的事，财富自由，翻身成为人上人。这是全社会的骗局。</p><p>2、对于这种大问题，Paul 的回答就像把大象装进冰箱总共分几步一样，他说，所有做出伟大的事业，都是同一个思路，只需四步：<code>一，选择一个领域；二，学习足够多的知识接触到领域最前沿；三，注意到最前沿有哪些缺口；四，探索有前途且有着力点的缺口。关键是，每一步都有隐藏陷阱。</code>那篇文章精彩的部分从这里开始。</p><p>3、选择领域，通用回答是找你喜欢且擅长的，这就难倒 80%的人了，“到底我喜欢且擅长干什么工作？”尤其是刚毕业的人，都会被这个问题困惑。我当年也问过自己这个问题。</p><p>4、不幸的是，后来我才发现，<code>我们在没有具体做一件事之前，很难想清楚自己是否喜欢且擅长这件事。</code>所以，正常的情况下，我们可能需要花几年的时间做某件事，才能知道自己有多喜欢它或者我们在这方面有多擅长。</p><p>5、<code>失望么，我们在信息非常不完整的情况下作出选择，这才是常态。</code>可以困惑，唯独注意，千万不要在原地打转太久，天天沉迷思索自己到底对什么事情感兴趣。这是陷阱。不迈出第一步，压根儿不可能想清楚这种问题。所以，如果你正深陷泥潭，不知道该自己适合做什么工作。那赶紧麻利行动起来。行动本身就是方法啊。</p><p>6、一定有人担心，我还没想清楚就行动，选错了怎么办？这个问题太常见了，总有用户在星球提问，列出 A B C D 几个职业选项，问我应该选哪个？似乎选了一个，就决定了很长一段时间的人生命运。<code>其实大部分时候，选择没那么重要。</code></p><p>7、我解释一下，不是说你的选择不重要，而是你在那个时间点的选择，相对你的全部人生来说，没那么重要。人生就像一列火车，启动时左转右转都很容易，都差不多，<code>只有自身的质量和动量成了规模，那时候的选择，无论是西飞还是东渡，才很重要。</code>真到那个时候，也不会问别人这个问题。</p><p>8、所以，行动，努力把手头的工作做到最好，积累规模，在做的过程中，你自然会找到自己感兴趣的事情。虽然这么说没有什么科学依据，但这是我看了很多自传之后得出的结论。我把这个过程理解为上天对做事之人的奖赏。同时，如果做一件事的时候，发现了另一件更令你兴奋的事，也不要害怕切换过去。工作是手段，人，才是目的。</p><p>9、注意，行动也有陷阱。<code>行动，不是只做老板下达的工作，记得要自己主动找事情做，而不是被动地等。要养成自己发起并推动项目的习惯。</code></p><p>10、这有点像稻盛和夫说的那样：公司里到处都存在着工作的“漩涡”。如果总是以别人为中心，而自己只是在外围跟着转的话，就体会不到工作的真正乐趣。自己必须成为“漩涡”的中心，积极地带动周围的人开展工作。自己想做的、主动推动的事，才是更让自己更兴奋的事情。你可以想一下，是不是这样。</p><p>11、<code>所以，再总结一下，“在让你兴奋的事情上努力工作，好事就会发生。”这就是做出卓越工作的秘诀，非常简单。</code>至于计划？Paul 的观点是，“对于大多数想要取得伟大成就的人来说，正确的策略是不要计划太多。在每个阶段，做任何看起来最有趣并为未来提供最好选择的事。”这是他的逻辑。</p><p>12、这个观点挺有意思的，我想应该能对正在思考职业规划，思考未来的你一些帮助吧。我们不需要有那么多计划，只要有一个大致原则就可以了，持续创造就够了。只要你在创造，就不愁没有好机会，没有好运气。</p><p>13、在职业发展上，我理解 Paul 的观点是，努力大于选择。虽然我们经常会说，选择大于努力。但没努力做点啥之前，不可能知道如何选择，这是真实世界的逻辑，也是让无数人困扰的原因。</p><p>14、有人辩解，我可以靠运气，就像早期进腾讯、阿里、拼多多的人一样，不也是靠运气押准了方向么。运气和努力这个问题，去年我们聊过很多，感兴趣的话，你可以看看。记得罗振宇讲的一句话，很精彩：“努力是你最终知道自己有没有运气的手段。啥意思，就是说<code>普通人得一辈子攀爬，往前爬，爬到最后，上帝站在那儿，然后你跪着求他说，把你兜里藏着的那个关于我命运的底牌掏给我看一眼，我才知道我这辈子有没有运气。”</code></p><p>15、刚进入一个新领域时，我们经常会有一些洁癖。比如做个短视频，写篇文章，不知道咋下手，只能参考别人的模式，但总有心魔作祟，这样参考别人的，是不是不太好？是不是没有原创性？一定不要有这样的想法。这只是形式，再或者说，那些不触犯法律边界的模仿，也是一条捷径——快速借鉴别人的经验。</p><p>16、很多人对复制或者参考有偏见，觉得就是抄袭，没有带来任何新价值。其实，复制本身并没有什么不好，创新不可能无中生有，一个新人，啥都不懂，只能以其他人的工作为土壤进行探索。而且想快速了解系统的运作机制，复制别人的工作，自己造个轮子，才是最快的。</p><p>17、我担心复制这个词有歧义。再解释下：<code>复制并不意味着没有创新，或者这里说的复制并不是简简单单地照猫画虎。创新是新想法的存在，而不是旧想法的不存在。</code>微信刚发布朋友圈的时候，很多人说这是抄袭。记得张小龙说，“很多人认为朋友圈是抄袭 Path 或 Instagram。他们看不到这是 IM 关系链上做 SNS 的风险极大之尝试，也看不到我们探索的自有风格的形态。他们是在用一句抄袭来掩饰自身平庸。”</p><p>18、所以，不要有洁癖。昨天写的 Notion，块编辑器也不是他原创的，瓦特也没有发明蒸汽机，只是改良了，让蒸汽机能真正大规模应用到工业生产上。对吧？</p><p>19、复制，一般只能复制旧事物，最前沿的东西是很难被复制的。所以，复制可以是优越性的体现，而不是屈服。最牛的复制思路是迁移，将一个领域的概念借用到另一个毫不相干的领域，还能完美解释。这就是“Good artists copy， great artists steal”的真意，翻译过来就是“能工摹形，巧匠窃意。”</p><p>20、新手有复制心魔，老手也有挫折心魔。<code>很多人最大的错误之一就是，但凡失败，从此一蹶不振，就像气球爆炸一样，把生活视作只有一次机会的有限游戏，要么成功，要么出局。</code></p><p>21、世界并不是这样运作的，就算是世俗眼中的天才创业者，也有无数次失败的战绩，比如王兴、张一鸣，在真正做成一家对世界影响极大的公司之前，折腾了很多家，还有黄峥，在拼多多之前，没啥人知道他还做过浏览器、电商代运营公司、游戏公司。</p><p>22、我一直把失败当作一种信号反馈机制。如果做一件事总是受挫，那放弃才是更理智的选择。就像红灯亮了，该停下来了一样。“<code>取得杰出成就是一种深度优先搜索，根节点是我们想成功的欲望。</code>”我们可以放弃，可以重新再试一次，但记得，不能放弃根节点，不能真佛系了呀。</p><p>23、一个人真想做成点什么，最需要的就是斗志。总把当受害者，总爱委屈，是典型弱者心态，会让人丧失斗志。而且在工作和生活中受挫，不一定是个坏现象，就像跑步的时候喘不过气，也不一定是个坏事情，只是说明我们跑得足够快。</p><p>24、大多数现代人没了战争、饥饿和各种生离死别、颠沛流离，但在海量信息和数据的互联网时代，新一代人也会遇到各种各样新问题。有工作的，没工作的，找工作的，结婚的，离婚的，找对象的，有孩子的没孩子的，有了孩子和孩子没法相处的，统统陷入了焦虑之中，甚至有了心理疾病。但一时的苦痛、迷茫和无助，就像那片一叶障目的叶子，容易让人忘记生活其实是一场无限游戏。</p><p>25、最近在 Apple TV 看《诊疗中》，有一段台词我很喜欢，“<code>没人可以毫发无伤地过一辈子，他们没经历过你的遭遇，但也只是现在而已，有些事终将会来，只是来得早还是来得晚...而你是要让哀痛淹没自己，还是要诚实地面对它，然后好起来？</code>”</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;七月，《黑客与画家》的作者 Paul Graham 发布了一篇博客，&lt;a href=&quot;http://paulgraham.com/greatwork.html&quot;&gt;如何成就卓越&lt;/a&gt;。据说他这篇文章，写了半年之久。&lt;/p&gt;
&lt;p&gt;他用两万字解答一个问题，&lt;code&gt;不同领域，很多人做出了伟大的事业，我们是否能从中找到交集，找到有关工作、人生、世界的答案，指引自己做出优秀的工作？&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;下面是小盖同学整理的精简版，挺好的，转给大家看看。&lt;/p&gt;</summary>
    
    
    
    <category term="随想杂谈" scheme="https://jamesyyang.github.io/categories/%E9%9A%8F%E6%83%B3%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="成长" scheme="https://jamesyyang.github.io/tags/%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>如何写Midjourney的Promot</title>
    <link href="https://jamesyyang.github.io/2023/08/04/ai-midjourney-promot/"/>
    <id>https://jamesyyang.github.io/2023/08/04/ai-midjourney-promot/</id>
    <published>2023-08-04T08:50:52.000Z</published>
    <updated>2023-08-04T09:08:53.792Z</updated>
    
    <content type="html"><![CDATA[<p>要想用好Midjourney，Promot绝对是非常重要的，有一定的技巧在里面。今天我们就尝试一下。</p><span id="more"></span><h2 id="Promot"><a href="#Promot" class="headerlink" title="Promot"></a>Promot</h2><p>和ChatGPT不同，Midjourney没有上下文，所以需要一次说清楚你想画什么。</p><p>但是，不要用<code>复杂的长句子</code>来描述。</p><p>你可以把Promot想象成调用Midjourney API的参数。参数越多，越详细，那么就可能获得你期望的效果。</p><p>所以，Midjourney的Promot需要的是尽可能详细的一组<code>短词</code>作为入参。那么，这组短词应该如何来构成呢？如果你学过摄影，那么你应该很容易理解，其实就是从构图、颜色、光线等等方面来进行描述。如果非要公式化，可以参考下面这个：</p><p><code>摄影类型 - 主体 - 主体修饰 - 背景 - 光线模式 - 全局光照 - 全局反射 - 写实/科幻/卡通/幻想</code>。</p><p>不过，很不幸，Midjourney不接受中文，所以每个部分你都需要英文来描述。很多同学就取巧先用中文描述后，让ChatGPT去翻译为英文，不过其实效果也不大好。我找到了一个表格，希望有帮助吧</p><img src="/images/mj-promot-p1.jpg" class=""><img src="/images/mj-promot-p2.jpg" class=""><img src="/images/mj-promot-p3.jpg" class=""><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>接下来看参数，其实常用的不多，如下：</p><ul><li><code>--niji</code>：这个参数可以让用户生成动漫和插画风格的图像，这个模型是Midjourney和Spellbrush合作开发的，对动漫、动漫风格和动漫美学有着更深入的了解。</li><li><code>--aspect</code>或<code>--ar</code>：这个参数可以让用户改变生成图像的宽高比，例如，<code>--aspect 16:9</code>可以获得16:9的纵横比。</li><li><code>--seed</code>：这个参数可以让用户设置随机种子，这可以帮助在几代图像之间保持更稳定/可重复性。也就是能够基于已经生成好的图片做微调，保持更好的一致性。</li><li><code>--no</code>：这个参数可以让用户给某些内容添加负面权重，让AI尝试移除或避免它们。例如，<code>--no plants</code>会尝试移除植物。</li><li><code>--c</code>：[0-100] Chaos，混乱程度，随机性。</li><li><code>--s</code>：[0-1000] Stylize，风格化越高艺术性越强。</li></ul><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>来看看我画的一个示例，Promot如下</p><p><code>a full body shot of a 10yo little boy, cute, rectangle glasses, black shot hair, standing under big tree, looking to sky, add background of starry sky, nature noon light, realistic photograph, global illumination, depth of view, side-angle view</code></p><p>图片如下：</p><img src="/images/mj-sample-1.png" class="">]]></content>
    
    
    <summary type="html">&lt;p&gt;要想用好Midjourney，Promot绝对是非常重要的，有一定的技巧在里面。今天我们就尝试一下。&lt;/p&gt;</summary>
    
    
    
    <category term="AI" scheme="https://jamesyyang.github.io/categories/AI/"/>
    
    
    <category term="midjourney" scheme="https://jamesyyang.github.io/tags/midjourney/"/>
    
  </entry>
  
  <entry>
    <title>初识 Midjourney</title>
    <link href="https://jamesyyang.github.io/2023/08/03/ai-midjourney-intro/"/>
    <id>https://jamesyyang.github.io/2023/08/03/ai-midjourney-intro/</id>
    <published>2023-08-03T13:14:44.000Z</published>
    <updated>2023-08-03T13:19:59.331Z</updated>
    
    <content type="html"><![CDATA[<p>AIGC里面除了chatGPT一枝独秀外，其实Midjourney也不错，bing做的图实在惨不忍睹，还是花点钱搞个Midjourney玩玩吧。</p><span id="more"></span><p>注册就略过了。</p><p>其实这货重点就是promot比较重要，chatGPT还可以读懂你的上下文，而Midjourney就不行了。</p><p>先看看promot怎么写：</p><img src="/images/mj-promot.png" class=""><p>看看它画的金渐层如何：</p><img src="/images/cat-mj.png" class="">]]></content>
    
    
    <summary type="html">&lt;p&gt;AIGC里面除了chatGPT一枝独秀外，其实Midjourney也不错，bing做的图实在惨不忍睹，还是花点钱搞个Midjourney玩玩吧。&lt;/p&gt;</summary>
    
    
    
    <category term="AI" scheme="https://jamesyyang.github.io/categories/AI/"/>
    
    
    <category term="midjourney" scheme="https://jamesyyang.github.io/tags/midjourney/"/>
    
  </entry>
  
  <entry>
    <title>如何把握AI--Caoz</title>
    <link href="https://jamesyyang.github.io/2023/07/31/AI-how-to-use/"/>
    <id>https://jamesyyang.github.io/2023/07/31/AI-how-to-use/</id>
    <published>2023-07-31T12:30:31.000Z</published>
    <updated>2023-09-28T01:15:45.759Z</updated>
    
    <content type="html"><![CDATA[<p>作为个体，我们如何把握好AI时代呢？</p><span id="more"></span><h2 id="3、如何高效使用AI"><a href="#3、如何高效使用AI" class="headerlink" title="3、如何高效使用AI"></a>3、如何高效使用AI</h2><h3 id="3-1-关于chatgpt对话"><a href="#3-1-关于chatgpt对话" class="headerlink" title="3.1 关于chatgpt对话"></a>3.1 关于chatgpt对话</h3><p>1、基础认知和逻辑胜过提问技巧</p><p>我知道很多人都在学习提问技巧，但提问技巧其实是个临时手段，在AI不能完整理解诉求的时候，提问技巧当然是非常有意义，有价值的。不过我想强调的是，你对诉求的基础认知，你对目标拆解的逻辑，其实是比提问技巧更重要的。</p><p>提问技巧可以在提问的过程中不断根据反馈修正，但是认知问题和逻辑问题，是会极大影响你使用AI的手段和效率。</p><p>以研发项目为例，你对诉求的正确认知才可以提出关键性的问题，寻求AI的辅助，否则你的提问技巧再好，可能都会忽略一些关键问题。此外，你自己对诉求有很清晰的认知判定，才能在AI的建议中快速过滤无效信息，干扰信息，快速判定不同信息的有效性和可用行，这才能让AI辅助的能力得到充分施展，如果你没有这种认知能力，你很容易被AI的答案误导。</p><p>而你能够正确的对诉求拆解，能够有架构思维，才能把复杂的问题拆分为一些具体的简单问题，让 AI给你合理的答复，AI很可能无法拆分复杂问题，或者它拆分的逻辑偏离你实际场景的诉求（当然这也基于你的描述质量）。</p><p>所以这里的关键点就是，你在使用AI的同时，不能说有了他，就不需要自我能力的提升和培养了。仍然需要加强自己的业务认知，加强自己的逻辑分析能力，才能更好的利用AI工具。</p><p>当然，这里有个好消息，就是你可以利用AI来提升基础认知和逻辑，不过这个好消息的前提是，你必须有逻辑的提出有价值的问题，然后基于AI来优化自己的认知能力，优化自己的逻辑能力，但我们知道，这个世界上可能大部分人在描述问题，表达诉求的时候，是缺乏逻辑的。</p><p>举例而言，你要描述一个诉求，你需要明确几点来描述，<code>第一，你的目标和初衷是什么；第二，关于这个目标和初衷的一些背景信息；第三，你在寻求这个目标的过程中，所遇到的困惑和阻力，也就是你的目标和诉求，也就是所需要的建议和方案。</code>那么基于以上来提问，相对来说，就更容易获得符合自己真实场景的答案，而大部分人描述诉求的时候，或者忽略了初衷和目标；或者忽略了背景信息。比如有人说，我应该去新加坡还是香港，你的目标和初衷是什么，你个人及家庭的背景因素又如何，愿意付出的成本如何（包括时间成本），没有这些信息，盲目找人给建议不是胡来么。</p><p>还是以上为例，有人又会铺垫过多无关的背景信息，啰里啰唆全不在重点，噪音信息提供太多，让人无法理解其真实意图，这也是经常遇到的糟糕提问的场景。</p><p>2、基于上下文的层进提问</p><p>Chatgpt 最大优势就是上下文的能力，基于这个能力，我们可以逐级提问，从浅入深的寻求建议和方案。</p><p>我们一直有个误区，认为对chatgpt提问要和对搜索引擎提问一样，需要精准而且严谨，其实由于新的语言模型上下文理解的存在，我们完全可以通过宽泛的问题起步，基于层进推进的方式，逐步获得更完美的结果，这是搜索时代所不具备的交流方式。以前有个笑话，一个老板让程序员搭建一个淘宝那样的平台，我们都会觉得这是不自量力的事情，但在AI时代，利用层进提问，类似的话题似乎出现了一些可行性。</p><p>就以上述的话题来举例</p><ul><li>问题1，请给出搭建类似淘宝这样的在线电商平台的产品架构，技术架构，运营组织架构。</li><li>AI会给出若干步骤和环节。</li><li>问题2，关于产品架构的第三部分，请给出更具体的技术方案建议。</li><li>AI给出若干方案选择和建议。</li><li>问题3，关于建议4，请给出可使用的第三方工具库和案例。</li><li>AI给出若干工具库和范例。</li><li>问题4，参照范例2，请给出示范代码。</li><li>问题5，请将示范代码中的查询效率做优化，并对录入内容做必要的的安全检查和容错设计。</li><li>。。。</li></ul><p>以上范例，就是<code>层进提问，从非常宽泛的架构开始，逐层到达最细致的代码和优化逻辑，而这样的过程可以延续非常多的层级</code>。</p><p>我发现，做技术方案调研，产品调研，运营建议的时候，这个方法都可以很好的提升个人的认知，弥补个人认知盲区，以及从大量宽泛的信息中，挖掘到真正可用的方案和建议。</p><p>3、自我纠错能力</p><p>AI给予的答案经常是有问题的，或者是不符合提问预期的，但好消息是，你可以不断的批评他，或者要求他修正和改进。</p><p>当然，很多时候，你让它改进后得到的依然是错误的，但如果是一些建议类信息，可能还是会让你有所发现，有所收获。</p><p>有朋友说，可以pua AI，不断的批评它，不断地否定它，来试图获得更好的答案，我不确定这是否是有个好策略，但是AI没有玻璃心，总是好的。</p><p>目前我的一个尝试的结论是，AI给出错误答案的时候，部分情况下可以通过否定给出正确答案，部分情况下多次否定也无法给出正确答案。这时候可能搜索引擎更靠谱一些。但是给不符合预期建议的时候，其实修订成功率会更高一些。不过你需要对提示词做一些调整，更好的描述自己的预期。</p><p>4、一些优化技巧</p><p>寻求案例支持</p><p>比如你想做一个符合什么需求的产品，或者有一个不错的主意希望AI给你一些建议，你就可以先问它这样的诉求，这样的目标，有什么成功案例，我发现这个是非常有意义的一种咨询，它会给出一些网上最成功的范例（虽然有一定的时效性问题），这时候你可以针对具体案例再提出更细致的问题，可以更好的认识自己诉求，以及防止很多自以为是的情况，很多人会认为自己有个足够新奇独特的点子，但其实可能网上已经有很成功的案例了。</p><p>那么<code>看到案例后，可以针对性的展开提问，比如我想要复制类似某某案例的产品，请给出合理的产品设计，技术规划。</code>这个真的是非常有效的一种工作方式。</p><p>比如你的老板给你一个任务，设计某个需求的产品，你用寻求范例，然后模仿范例规划的方式，可以极短的时间做出相对专业的整体产品规划或技术架构方案，当然可能中间有不少需要调整和优化的地方，但是从整体规划来说，可用性是非常高的，而且可以带来很多思路和线索。</p><p>我们做整体规划的时候，最大的障碍往往是担心自己考虑不周，规划有严重缺漏或者存在一些不合理的地方，其实一些核心理念和关键技术自己都是心里有数的。而通过寻求案例，结合案例给出规划的提问手段，就可以极大弥补这方面的担心，你可以继续坚持自己的核心理念和核心技术架构，但是可以利用案例中的整体规划来给自己查漏补缺，让自己能够对整体结构的完备性和通用性有更多的信心，当然，提问的过程中，可以通过多次让AI补充的方式，获得更加完整的内容，也可以基于实际诉求酌情删减，记住AI只是建议和咨询，你必须有自己的决策能力，所有的建议最终需要你的取舍能力，这一点依然是人类价值的所在。</p><p>投喂一些范例。你希望在某个领域创建一个新的品牌，有个很值得推荐的方法，你把这个领域最好的品牌都录入进去，告诉AI，你要做一个类似的领域内品牌，看看它给你多少建议，你不能指望所有建议都是好的，但是这里很可能会有一两条不错的建议。</p><p>企业命名，孩子命名，都可以用先投喂再提问的方式来寻求更符合你期望的结果。</p><p>Temperature, top-p,top-k参数</p><p>可能很少人访问过这个页面，<a href="https://platform.openai.com/playground%EF%BC%8C%E8%BF%99%E9%87%8C%E5%85%B6%E5%AE%9E%E6%9C%89%E8%AF%B8%E5%A4%9A%E6%8F%90%E9%97%AE%E7%9A%84%E5%8F%82%E6%95%B0%E5%AE%9A%E4%B9%89%E3%80%82">https://platform.openai.com/playground，这里其实有诸多提问的参数定义。</a></p><p>这是发挥AI想象力，增加AI词汇丰富度的参数，可能很多小伙伴都不知道这些参数，我也是通过王小雨的文章看到的。</p><p>利用以上三个参数，可以让AI生成的文字更具有渲染力，但也可能导致文字逻辑和用词出现一些散乱和错误。所以这也是需要不断测试，需要对生成的内容做一定的人工校验。</p><p>这些参数适合做文章生成和故事创作，具体使用可参见如下文章。<a href="https://mp.weixin.qq.com/s?__biz=MzkwOTMzMzk0MQ==&amp;mid=2247485195&amp;idx=1&amp;sn=ef880bb3a4b302a4d43025074773225d&amp;chksm=c13d03d1f64a8ac708c78f027c0ce26d366b45956f0cdcffd2c9911b95c944b9b973173bddfd&amp;token=1087620821&amp;lang=zh_CN#rd">https://mp.weixin.qq.com/s?__biz=MzkwOTMzMzk0MQ==&amp;mid=2247485195&amp;idx=1&amp;sn=ef880bb3a4b302a4d43025074773225d&amp;chksm=c13d03d1f64a8ac708c78f027c0ce26d366b45956f0cdcffd2c9911b95c944b9b973173bddfd&amp;token=1087620821&amp;lang=zh_CN#rd</a></p><p>5、反向获得问题</p><p>这也是非常有意义的一种提问技巧，就是你想要得到的答案是问题。这时候可能需要给ai提供一个人设，然后让它提出问题。</p><p>比如前面提到的说，假设你是某行业的产品面试官，请给出一些面试题目。假设你是什么角色，现在面对怎样的场景，你最关心的是哪些问题。</p><p>之后，你还可以自己回答问题，让AI来打分，或者直接通过AI来获得答案。</p><p>如果你希望通过某些专业考试，真的可以试试，比如真的有人用这个方式检验自己的雅思能力，结果还是比较准确的。</p><p>如果你希望对自己的职场竞争力做一个评估，可以让AI当作面试官给你出题，你认真作答，再让AI给你点评。</p><p>还有就是，一些创业者，需要招聘合伙人，但是对相关领域的问题不熟悉，缺乏相关领域专业判断能力，可以让AI出题，然后让AI点评对方的答案。不过这里可能存在一些不那么专业的判定，实话实说，这里最好还是有专业人士协助判断。</p><p>6、代码解释器，老板的神器</p><p>Chatgpt最新发布的代码解释器，其实我备课的时候还没有，这也让我不得不增补内容。</p><p>很多人会被这个名字所误导，以为这只是一个解读代码的工具，是的，这个确实能解读代码，但更酷的是，它对数据的理解和建议，是非常非常专业的。</p><p>为什么我叫它老板神器，把公司的收支数据，excel数据导出来喂给它，然后让它用各种方式，维度，目标来归纳整理做报表。把公司的运营数据扔进来，也是同理。就把各种excel数据表直接输出csv然后扔进来，直接给目标让它干活，甚至，你不知道目标还可以问它，让它给你建议，看看能从数据中得到什么结论。有哪些数据是值得分析的。</p><p>很可怕，很强大，对数据分析的从业者而言，如果你的老板玩的很熟练了，你们就要仔细考虑自己的职场该怎么办了。</p><p><a href="https://zhuanlan.zhihu.com/p/642445620">https://zhuanlan.zhihu.com/p/642445620</a> 这里发一个知乎的链接，可以看看这个新的功能有多强大，强烈建议每个人都亲身体验一下，而且尽可能复制一下链接中的可能性，然后挖掘一些新的玩法。代码解释器的出现甚至让我觉得自己的备课内容可能需要大幅度重构，它对从业者的冲击，很可能是非常剧烈的。</p><p>最后今天增补一条啊，就是最近也有测评，chatgpt4的专业能力大幅度下降，据说应该是微软为了节省成本减算力了，而另一方面，claude+ 2.0，llama2.0 都在最近发布，这个市场格局的变化也是非常快的，所以我也不肯定后续是不是chatgpt4能依然保持领先。</p><h3 id="3-2-关于midjourney"><a href="#3-2-关于midjourney" class="headerlink" title="3.2 关于midjourney"></a>3.2 关于midjourney</h3><p>AI设计肯定是最有价值的AI产业化领域之一，而midjourney是目前表现最出色的AI设计平台。</p><p>使用方法和prompt范例，网上有很多，随便搜索一下都有很多，我就不赘述了，毕竟我不够专业，但有些基本思路，还是很值得分享一下。</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzI0MjA1Mjg2Ng==&amp;mid=2649871399&amp;idx=1&amp;sn=de9c66bad2972b6683a1c15a64e0590c&amp;chksm=f1074e4ac670c75ca49e65761bc00a5d3da953d67e2ffb7dba2260b475f20903061a85d22711&amp;token=1087620821&amp;lang=zh_CN#rd">https://mp.weixin.qq.com/s?__biz=MzI0MjA1Mjg2Ng==&amp;mid=2649871399&amp;idx=1&amp;sn=de9c66bad2972b6683a1c15a64e0590c&amp;chksm=f1074e4ac670c75ca49e65761bc00a5d3da953d67e2ffb7dba2260b475f20903061a85d22711&amp;token=1087620821&amp;lang=zh_CN#rd</a></p><p>这篇文章非常值得分享（没有公开发布），说几个要点。</p><p>1、所有的提示词，均可理解为更加灵活的参数模式，具体看文章里的表格，不同的参数组合，测试不同参数的效果区别。</p><p>2、基于上传种子图片，利用适当的提示词参数生成角色换装图，角色场景图。这在游戏中是很常见的，未来甚至可以做到不同玩家基于自己的照片生成角色换装图和角色场景图，无缝接入游戏。</p><p>3、特定的提示词可以实现组图，套图的效果，文章中典型的游戏道具，需要风格一致的组图，这个是非常有效的一种生成方法。</p><p>其实在AI设计里，如果仅仅是海报设计，是自由发挥的设计，更容易通过发散性的提示词去寻找最优设计。</p><p>但如果是需要满足一定的业务场景诉求，比如游戏中，就需要风格一致性，角色一致性，场景视角切换的背景信息一致性，在这样的诉求下，需要限定AI的生成范围和生成逻辑，就需要一些特定的提词技巧，这里对种子图片的使用就很关键，此外，一些第三方插件可以角色剥离或者动作设计，但midjourney不是开源系统，所以第三方插件整合目前看上去好像还不是很支持，由于技术的提升太快，可能我的备课内容无法有效覆盖。</p><p>这些领域是值得深挖的，一般而言，如果能够达到文章中王哲那样的使用能力，设计成本至少节省一半以上，甚至3/4以上。</p><p>坦白说，我不是此中高手，我只是指引方向，所需要的就是不断精进研习，不断自己测试打磨，不断把文章中提到的方法，思路，用自己的理解实现一遍，总结整理，用在自己所熟悉的领域中，并交付市场验证。</p><h3 id="3-3-关于stable-diffusion"><a href="#3-3-关于stable-diffusion" class="headerlink" title="3.3 关于stable diffusion"></a>3.3 关于stable diffusion</h3><p>Stable diffusion 是另一款强大的AI设计软件，和midjourney最大的不同是，这款软件是开源的，而且可以完全私有化安装和使用，并且能够使用大量的第三方开源模型，或者自我训练模型，这给企业带来了极大的灵活度。</p><p>所以目前也是最常用的AI设计工具之一，那么从搭建，使用，到各种场景的测试，王小雨的公众号是最有价值的，如果能完全按照其公众号的学习教程完整复制一遍，相信已经能熟练掌握达到非常高的境界。公众号名称，“Renee创业随笔”。</p><p>我开始备课的时候，stable diffusion在一些细节处理上，比如手型处理，和midjourney还是有差距的，但最近进步也是神速，可以说和midjourney已经相差无几，这样可用性也得到了极大的增强。</p><p>Stable diffusion提供了更多的参数选择，所以灵活性和垂直应用能力更强，但入手难度相对来说也更高。</p><p>那么说一些基本逻辑。</p><ul><li>第一，你要学会如何使用不同的训练模型，并且能理解不同模型的适用范围。</li><li>第二，你要了解如何训练自己的模型，并基于自己的模型生成所需要的图片。比如家居平台的统一风格设计图。</li><li>第三，你要知道如何利用已有的图片进行生成，部分替换，合成等操作，这些在很多具体场景，比如模特换装。</li><li>第四，你要学会使用civitai，利用这个平台寻找符合自己的训练模型，并不断尝试学习别人的训练技巧和提词技巧，这是很好的交流学习的社群。国内也有一个炼丹阁，也是类似的平台。</li><li>第五，你要学会结合第三方插件来更好的利用stable diffusion，这里特别强调的两个，一个是segmentanything，是抠图插件；另一个是DragGAN，是拖拽插件。</li></ul><p>那么多说一点，如果你真正熟练掌握了模型训练的技巧和提词技巧，你完全可以在civitai，或者炼丹阁发布自己的模型，并结交更多的同领域的专业人士，这有可能给你的带来意想不到的机会和可能。</p><p>仅仅stable diffusion使用，都足够一个十几节的系列课，但其实我并不擅长细节，建议去追寻renee创业笔记学习。</p><h3 id="3-4-关于hugging-face"><a href="#3-4-关于hugging-face" class="headerlink" title="3.4 关于hugging face"></a>3.4 关于hugging face</h3><p>Hugging face 可能知道的人不是很多，可以用一个简单比喻，hugging face是机器学习领域的github，上面有大量的第三方开源的预训练模型。目前上面的资源包括四大类，数据集，预训练模型，课程，以及文档。</p><p>如果想要学习机器学习，参照别人最先进的成果，hugging face是很好的学习平台和案例展示库。那么对于一些垂直领域有实际业务诉求的企业或从业者而言，可能也就有一定的探宝价值。但坦白说，我认为对普通人而言，可能很难从中挖掘到有价值的东西，这需要你的技术理解力，你的英文学习能力，需要对机器学习有相当的基础，才能在这个平台寻找到有价值的东西。</p><p><a href="https://zhuanlan.zhihu.com/p/535100411">https://zhuanlan.zhihu.com/p/535100411</a> 这篇文章是很好的科普，有兴趣的读者可以仔细阅读。</p><h3 id="3-5-关于Langchain"><a href="#3-5-关于Langchain" class="headerlink" title="3.5 关于Langchain"></a>3.5 关于Langchain</h3><p>Langchain是一个基于大语言模型的超强框架，可以用于拓展诸如chatgpt这样的语言模型使用边界的开源系统。这样作为个人开发者就可以基于langchain开发很多垂直领域，或者与特定应用结合的ai产品。一个简单的范例，langchain可以轻松搭建chatgpt与google的结合，这样所谓时效性的问题就可以有很好的解决。</p><p>下面是一个知乎上的中文文档 <a href="https://zhuanlan.zhihu.com/p/620529542">https://zhuanlan.zhihu.com/p/620529542</a></p><p>程序员朋友想要基于典型的AI平台搭建一些应用产品，可以认真的研究一下，并快速用于实践。</p><p>星球嘉宾 王小雨的公众号 renee创业随笔 中，有多篇langchain的学习笔记，自己去搜索即可，就不列所有具体连接了，如果不会搜索，对不起，这不是我认为现在需要教给你的技能。初学者可以按图索骥先复制实现，然后再思考还有什么其他可以做的事情来尝试。</p><h3 id="3-6-其他AI平台"><a href="#3-6-其他AI平台" class="headerlink" title="3.6 其他AI平台"></a>3.6 其他AI平台</h3><p>AI 时代工具太多，太驳杂。</p><p>网上最近我看到有人提到一个观点，和我之前强调的不谋而合，不要把阅读AI领域新闻当作学习AI，你知道100个工具没有意义，你用好其中两到三个，发挥最大效率，就是你最大的成就。</p><p>当然，适度了解还是有必要的，毕竟不同领域可能有垂直方向上更适合的产品。在各自的领域选择最合适的工具，依然是需要做一些功课和调查的。</p><p>那么企业办公而言，notion AI是非常好的选择，办公文件的编写，商务邮件的回复，协同办公任务定义，数据表整理，都是很好的帮手。当然这个产品也结合了chatgpt，并且针对办公场景，我相信做了一定的优化。目前几个业内顶级大佬都推荐了这个产品作为企业内部办公工具。如果不涉及机密产业，不涉及数据信息保密诉求，我认为这个产品是有推荐价值的。</p><p>但是也必须指出，毕竟该产品和chatgpt有绑定，云端部署，所以如果对企业内部信息涉密度要求较高，比如一些军工企业，和国家政府，金融领域业务来往密切的企业，不建议使用。</p><p>Adobe 的设计AI firefly和他们的设计软件有深度绑定，这样对于一些习惯于Adobe体系的设计师来说，学习成本和迁移成本是最低的，可以在日常工作中轻松引用，这也是值得推荐的一个选择。有朋友说他们创业团队的设计师习惯adobe工具，非常排斥AI，我说没问题的，他能把firefly用起来，用的非常好，也是有价值的。</p><p>Meta 的 AI组件，segment-anything，对于很多场景来说应用价值巨大，那么现在这个插件也可以整合到 stable diffsion上，这样的组合威力，如果熟练使用，在诸如电商，游戏等诸多领域都有非常巨大的应用空间。前面也提到了，包括最新的dragGAN，也是很有意义的。</p><p>当然，Meta的LLAMA开源大语言模型平台，在很多学术领域也有广泛的应用，基于此发布的垂直训练模型也非常丰富，对于特定领域从业者而言也是非常值得探索的。</p><p>此外，quroa社区推出的poe.com 是一个整合的使用平台，在上提供了一些目前口碑最好，最流行的大语言模型，也是一个不错的资源平台，可以用于学习和比较不同产品的使用效果。</p><p>最后，祭出一张大图如下，这个算比较全的流行AI产品的整理了，很抱歉，这张图并没有包括国内的诸多AI产品。而且随着时间推进，现实会有非常巨大的变化和调整，确实，新产品新模型出来的太快太频繁了。</p><img src="/images/AIGC-3.png" class=""><h2 id="4、AI时代的人才价值如何定义"><a href="#4、AI时代的人才价值如何定义" class="headerlink" title="4、AI时代的人才价值如何定义"></a>4、AI时代的人才价值如何定义</h2><h3 id="4-1-通识能力"><a href="#4-1-通识能力" class="headerlink" title="4.1 通识能力"></a>4.1 通识能力</h3><p>AI可以放大个体能力边界，让一个个体掌握团队的力量，我看到案例，一个产品经理用很短的时间做出完整的产品原型。包括可交互代码的那种完整原型。那么这时候，要求这个产品经理有基本的前端交互设计能力，有基本的编码理解力，有基本的架构能力，当然，还必须有很好的产品理解力。</p><p>个体的价值差距，不再体现在具体细节的熟练度和精深度上。（个别领域精深度依然关键，但仅仅针对顶尖人才，对大部分职场从业者，这部分能力AI足够替代），而是体现在个人的适配性和效率产出上，具有通识能力，可以更好的利用AI实现广泛的适配性，实现超级个体的力量。</p><p>其实以前的福利课，多次提到增加横向的知识面和适配性，但说实话，我也没想到AI时代的来临这么快，而AI时代，对这个能力的价值放大，比之以往，更加显著。</p><p>我们也知道现在职场流行一个词，降本增效，一个能够兼任多个岗位的通识性人才在职场更具有广泛的适用性，而创业者，具备通识性也将是极大的优势，此外，从企业运营效率而言，沟通成本一直是制约团队产出效率的一个重要因素，通识能力也是极大降低沟通成本的一种重要基础能力。所以就如以往说的，做产品和运营的学一点技术基础；做技术研发的去理解一下业务和运营逻辑，横向拓展自己的认知边界，一定是有价值的。</p><h3 id="4-2-思维发散性和想象力"><a href="#4-2-思维发散性和想象力" class="headerlink" title="4.2 思维发散性和想象力"></a>4.2 思维发散性和想象力</h3><p>很多人知道AI强大，却不知道该如何提问，或者不知道可以用来干什么，甚至在遇到明确问题的时候，也很难追问到更完整和有价值的答案。</p><p>提问的能力再次被放大，搜索引擎时代，我们就强调过提问的能力，而AI时代，这个能力的价值再次被放大。</p><p>在很多成功案例里，包括前面提到的一些提问技巧，一个关键点就是，你的思维必须是具有发散性的，具有开放性的。你可以问出更宽泛的问题，然后再逐步细化；你也可以天马行空的问出一些开放性问题，然后对答案做出甄别和判断，寻求对你有价值的建议。</p><p>我觉得不少人，会有一个误区，认为提问必须提出高质量，专业的问题。对搜索引擎来说，是这样的，问的足够精确，足够专业，才能获得足够完美的答案。但是搜索引擎是不具备上下文的能力的，而AI是可以完成层进提问，这是一个核心区别，在这样一个核心区别的基础上，其实可以多试试发散性提问，宽泛性提问，然后基于答案再进入深层次提问，逐步推进，这其实是更好的获得知识，建议的方式。</p><p>所以前面也说过，一个熟练程序员可能喜欢用注释的方式去利用AI写代码，但是如果你使用发散方式提问，可能会获得更多的灵活技术建议，而不是代码本身。</p><p>这其实又回到我旧文说过的话题，要做出题家，不要沉迷于当做题家，当做题家，你做不过AI的，哪怕现在你很强，未来也不是它的对手；当出题家，AI是你的帮手，你指挥它帮你干活。</p><h3 id="4-3-强行动力"><a href="#4-3-强行动力" class="headerlink" title="4.3 强行动力"></a>4.3 强行动力</h3><p>如果有人说，AI没什么了不起的，大家该干嘛干嘛，你该怎么回答？</p><p>对对对，你说的一点都对。</p><p>千万不要试图说服对方，千万不要试图教育对方，这是你的时间窗口，抓住时间和机会大踏步跨越，让对方原地踏步。</p><p>学习的目的是实践，实践是最好的学习，使用起来，高频度的使用起来，针对日常工作，针对一些曾经认为难以实现的设想，立即行动起来。</p><p>尝试写一些文案；尝试编写一个可执行的小程序，小游戏；尝试学习一些领域知识；尝试优化自己的面试能力；尝试给孩子提供一些更有意义的辅导，尝试为自己的企业，产品或者社团生成一张炫酷的海报，等等等等。</p><p>在行动的基础上，再去不断优化，调整。一切都必须与真实实践对接，我们学习AI的目的，不是为了考试，不是为了拿证，不是为了应付面试，而是解决真实场景中的真实问题。</p><p>当然，我知道，在现在中国互联网环境下有若干障碍，但这个希望读者自己克服，毕竟，限于法律法规，我不敢以身试险，这不是技术问题，也不是成本问题，这就是个法律问题。</p><h3 id="4-4-基础逻辑与决策能力"><a href="#4-4-基础逻辑与决策能力" class="headerlink" title="4.4 基础逻辑与决策能力"></a>4.4 基础逻辑与决策能力</h3><p>首先，AI可以给出很多建议，方案，和策略。包括产品设计方案，技术架构方案，运营方案等，当然，这些方案可能是宽泛的，但是基于层进式提问，可以获得更多明细的建议，那么问题来了，这些建议并不都是可取的，所谓的投入产出回报，所谓的性价比，所谓的你的核心诉求和价值锚点，需要你自己斟酌，自己判定，所以，你需要做出关键选择，哪些为你所用，哪些则不是你应该去追求的。</p><p>俞军老师讲的，好的产品经理应该善于做减法，在AI 时代，这个原则依然适用。</p><p>其次，AI会告诉你各种可能，各种可行性，但是其中不同可能的概率，以及背后的博弈逻辑，需要你自己甄别，自己测算。盲目的相信AI也许会带来非常严重的糟糕后果，这时候，我希望你明白，不是AI本身的问题，而是你判断上的问题。前段时间有个新闻，美国一个律师用了AI提供的判例进行辩护，没想到 AI给出的判例是它自己编出来的，所以这个律师丢掉了工作和信用。</p><p>我们之前提过的，用概率的方式来规划人生，用博弈的理论思考策略和决策，在AI时代，也是依然适用的。</p><p>所以，基础逻辑，关键判断能力，决策能力，依然是AI时代最核心的能力诉求。</p><h2 id="5、如何有效的学习AI"><a href="#5、如何有效的学习AI" class="headerlink" title="5、如何有效的学习AI"></a>5、如何有效的学习AI</h2><p>1、首先，你要确保自己能使用最好的 AI产品。涉及科学上网和海外账户的话题因为敏感原因，很抱歉这里无法给出解决方案。实际上我们AIGC星球提供了一个可以使用的跨接方案，针对星球用户是免费提供的，但据我所知，这个使用的人并不多。因为这个跨接方案的API是我付费支持的。</p><p>当然，如果你是涉密机构或敏感部门，不建议在办公场所使用，以免涉及法律问题。但我建议你在家也要尽量多尝试使用和学习。</p><p>2、善于互联网资源学习，比如通过搜索引擎搜索有关资料，特别是要使用google ,其实现在很多非常好的学习AI的资源网站，通过一些搜索关键词是可以轻松查阅的。那么这里强调的是，尽量让自己具有英文阅读能力，可以获得第一手的资料。</p><p>国内一些非常优质的学习自媒体资源，可以参见我们AI星球的嘉宾分享，前面也有提及。</p><img src="/images/AIGC-4.png" class=""><p>3、reddit 里的优质讨论社区</p><p>这张图是我看到网上有人整理的，reddit社区里的相关讨论组，应该有不少非常优秀的讨论内容值得学习，当然，良莠不分，也会存在较多噪音，需要自己甄别。</p><p>一些优秀的社群，社区值得深度参与，但也要主意可能信息过剩，噪音过多，要有自己的主见和筛选能力，否则可能淹没在大量信息中，这就得不偿失了。</p><p>这里多说一点我的社群运营理念，我不认为社群的信息越丰富越好，用户参与越积极越好，因为质量参次，其实反而耽误更多人的时间，所以我对星球的运营，向来是侧重于删帖。</p><p>4、真实场景下的实战训练</p><p>学习不只是浏览，阅读和分析别人的案例，而是必须结合实战，实战必须符合真实场景，比如，你用AI做一张很酷的图片，这当然也不错，但脱离了业务场景，你基于自己所营销的产品做出了一张很酷的图片，这就是真实业务场景；你基于自己公司的游戏，生成了一组很酷的动作套图，或者存在特定角色的背景套图，这也是真实业务场景，这种才是有效训练。</p><p>比如学习AI编程，你要完成一个基本任务，比如写一个可以上线运营的小工具，小游戏，然后逐步优化它。比如你有一个学习算法的任务，你利用AI 成功学会十个中等难度以上的leetcode算法题，并且能在脱离AI后自己重写出来。</p><p>比如你学习英文，利用AI为老师，成功写出一篇可以获得雅思7分的英语作文来。</p><p>明确的场景，清晰的目标诉求，然后基于任务挑战的方式去利用AI实现，当然过程可能不是那么容易，甚至会有很多挫折，但这恰恰是你学习的过程。</p><p>必须认清一个事实，虽然我们的目标是提升效率，但学习的过程中，效率可能会有所损失，比如一个技术问题，你完全可以基于已有的手段去分析和解决，但你试图用AI辅助，反而浪费了时间，但这个过程可能是值得的，当你熟练使用后，最终会有很大的效率提升。</p><p>学习的过程记得不要求全责备，不要苛求AI是完美的，是稳定的，是完全可信的，你需要它的协助，但你永远记住自己的判断和决策依然是最关键的。</p><p>真实场景的实战训练，才会让自己更有信心利用AI，更好的解决真实问题，而不仅仅是一种技能炫耀或者桌上谈资。</p><p>5、分享出你学习的过程。</p><p>分享你学习的过程本身就是很重要的归纳整理，让你能更清楚的复盘得失，从而更清晰的认清AI在应用中的价值和缺陷。</p><p>此外，分享的过程也是你建立影响力，寻求价值认可的过程。</p><p>第三，分享也是接受反馈的过程，比如你到AI星球分享你学习的经历，可能会遇到有人告诉你，其实有更简单的方案，更好的方法，或者你在哪里可能做的不是很到位，等等，这都会反过来给你一个很好的指引，分享即学习，有价值的反馈往往是你进一步成长最关键的助力。</p><p>6，形成依赖和习惯。</p><p>相信我，当你真的开始不断使用AI来解决真实场景的问题，很快你就会形成一种依赖和习惯，不再需要别人催促，不再需要满足所谓特定的学习目标，你在工作和生活中，都会自主的不断使用和强化。就好比最开始习惯使用搜索引擎，习惯使用即时通讯。</p><p>实际上，我身边很多非常出色的创业者，企业家都已经依赖和习惯使用AI，解决工作中的诸多实际问题，这时候就完全没必要再去谈如何学习，如何成长了。已经成为他们日常工作、生活中的一部分。</p><p>我知道很多人还认为这是天方夜谭，但对于业内最优秀的一群人来说，这已经是他们的日常了。</p><p>那这里我也重申一下，本来是我要强调的内容。<code>一个新的技术方向，或者产品方向，是否具有革命性，要看他的用户使用后，是否会产生依赖性，而这个依赖性是否不可逆。</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;作为个体，我们如何把握好AI时代呢？&lt;/p&gt;</summary>
    
    
    
    <category term="AI" scheme="https://jamesyyang.github.io/categories/AI/"/>
    
    
  </entry>
  
  <entry>
    <title>对于AI的认识--Caoz</title>
    <link href="https://jamesyyang.github.io/2023/07/31/AI-what-is/"/>
    <id>https://jamesyyang.github.io/2023/07/31/AI-what-is/</id>
    <published>2023-07-31T12:07:31.000Z</published>
    <updated>2023-09-28T01:15:45.759Z</updated>
    
    <content type="html"><![CDATA[<p>AI时代已经来临，我们该如何认清AI的价值呢？</p><span id="more"></span><h2 id="1、认清AI价值"><a href="#1、认清AI价值" class="headerlink" title="1、认清AI价值"></a>1、认清AI价值</h2><img src="/images/AIGC-1.png" class=""><p>开局一张图，这张图介绍了目前主流AI平台的技术模型和应用领域，当然，太多技术名词，可能理解起来不容易，不过没关系，有需要的，从事技术相关工作的朋友可以作为一个学习的导图，但是在日常应用中，并不一定需要理解其中每段话的含义，大概知道不同领域存在不同技术模型的AI产品就可以了。</p><h3 id="1-1-AI就是生产力工具"><a href="#1-1-AI就是生产力工具" class="headerlink" title="1.1 AI就是生产力工具"></a>1.1 AI就是生产力工具</h3><p>我们不讲那些虚的，大词，我就强调一点，AI是生产力工具。</p><h4 id="首先，它是你工作和生活中的万能助理。"><a href="#首先，它是你工作和生活中的万能助理。" class="headerlink" title="首先，它是你工作和生活中的万能助理。"></a>首先，它是你工作和生活中的万能助理。</h4><p>无论是工作中的一些优化诉求，日常开发任务，设计任务，文案任务等等，还是生活中的一些技能诉求，比如孩子的手工作品，科学小实验，甚至家庭菜谱，AI都可以给予你足够的帮助。实际上随着版本更迭，不远的未来，AI会有更大的潜力，帮助你优化及打点生活和工作中的一切。</p><p>24*7,随时待命，任劳任怨。</p><p>很多时候，我们只是限于自身的想象力，没有释放出它巨大的能力。</p><p>一个优秀的程序员，拥有这样一个万能助理，工作效率可以提升3-5倍。一个优秀的设计师，也会有这样的效率提升。可以说，大部分白领工作，都能从中获得惊人的效率提升。</p><p>下面列举一些典型的利用AI的日常可能性</p><ol><li>协助制定旅游攻略</li><li>常识历史，文化知识的查询</li><li>简单且免费的个人法律咨询，医疗咨询（当然不取代专业服务）</li><li>翻译不同语言的内容</li><li>协助完成文档，回复文件</li><li>帮助孩子打造科学实验，制作手工作品</li><li>查询菜谱</li><li>美化修饰家人的照片</li><li>协助设计家庭装修风格，个人穿搭风格</li><li>可以协助辅导子女作业问题，检查错题并给出正确提示</li><li>利用最新的网络插件能力，可以查询一些实时天气，新闻等信息。</li><li>利用其他第三方插件可以订酒店，机票等服务。</li></ol><p>还有很多其他可能性，无法完全赘述。</p><h4 id="其次，它还是博学且耐心的万能教师。"><a href="#其次，它还是博学且耐心的万能教师。" class="headerlink" title="其次，它还是博学且耐心的万能教师。"></a>其次，它还是博学且耐心的万能教师。</h4><p>算法不会写，可以让他教你；雅思作文写不好，他可以给你修改建议；一些专业课程遇到困难，很多时候他也能给你正确的建议和参考答案。我们注意到chatgpt4.0已经通过了很多高难度的专业考试，其专业知识能力在很多领域都已经达到和超越了最顶级的Top 1%人类的水平。我们有理由相信随着技术迭代，他的优势会越发明显。</p><p>专业论文看不懂，他可以给你翻译，还能帮你用更通俗的语言重新阐述。而且随时可用，事无巨细，耐心又是好脾气。只要你不断问，他就会不断地给你提供答案。</p><p>现在我看到有人用它来训练雅思读写能力，并给出修改建议。</p><p>当然，我们也要明确，不要求全责备，目前AI还存在一些问题，不能保证所有的结果都是可信赖的，甚至在有些领域问题还比较大，但是我们也要相信技术的进步，实际上我备课的时候也在苦恼一个问题，有些我认为是AI的瓶颈，在准备备课的过程中，就已经出现了新的解决方案。所以从发展眼光来说，不要因为AI当前的一些不足去否定它，去忽视它。它的成长已经足够快，而且未来的想象空间也足够大。</p><h4 id="第三，它在工作和事业中可以发挥重大的作用"><a href="#第三，它在工作和事业中可以发挥重大的作用" class="headerlink" title="第三，它在工作和事业中可以发挥重大的作用"></a>第三，它在工作和事业中可以发挥重大的作用</h4><p>1 多语种翻译能力</p><p>比起传统翻译，AI的语种适应能力更强，对上下文的理解更加到位，可以基于上下文做出合理的判断和用语选择，这是传统翻译非常欠缺的。虽然对口语，俚语，AI仍然具有一定的理解障碍，但是对一般的公文写作，公文邮件回复，工作场景的文档翻译而言，其效果已经超出预期。</p><p>2 文档编写和优化</p><p>用户可以用口语和简单的关键词组合发布文档的诉求，而AI可以讲这些诉求快速整理为非常漂亮的公文文档，而且格式非常符合规范。无论是公司的规则指定，合作协议，客户应答，都可以给出相当水准的文案。当然，用户也需要不断学习如何更好地给AI提供合适的素材，有时候AI并不能充分理解用户的角色，理解用户文案中潜藏的动机。所以如果希望文案更加具有针对性和目的性，需要不断和AI进行多次交互调整，这需要一定的技巧。</p><p>Notion AI应该是在工作文档优化，工作流程设计上有特殊的优化策略。</p><p>3 AI编程</p><p>AI编程其实分两种含义，一种是利用AI完成我们日常的研发，或者利用AI学习日常的研发，就是你给出一个研发目的，让AI帮你输出代码，这里主要是说这部分，另一种是结合最新的AI模型进行编程，让我们的产品拥有AI的能力，有一个叫做langchain的产品，可以方便开发者获得这方面的能力，这部分会在后续章节中介绍。</p><p>利用AI编程已经不是罕见的事情，事实上越来越多的程序员开始乐此不彼。</p><p>这其中分两个非常典型的不同的场景。</p><p>场景1，基于注释的编程，程序员明确知道所需要使用的工具，调用方法，算法，以及程序输出逻辑，这种情况下，基于注释的编程工具可以让程序员快速完成那些繁琐的代码录入过程。这个是目前较多程序员常用的AI编程途径。</p><p>场景2，更宽泛的咨询，实际上利用chatgpt，可以让对程序了解不深，或者对所需要的算法，工具不十分熟悉的人，一样可以高效完成任务。这种情况下，编程可能是通过一些简单而泛泛的问答开始的，但过程中，基于代码的执行反馈和设计者的感知，会不断地通过交互调整，从而实现更好的效果。这让一些具有技术基础的产品经理可以更好的展示才能，实现产品的开发和发布。</p><p>但场景2的沟通难度会大于场景1，这里存在几个问题，其一就是过于宽泛的问题可能导致AI给出的结果不是用户真正所期望的。其二是AI在推荐技术方案和第三方工具的时候容易出现认知混淆，这个问题目前看还是比较严重的，需要需求方有独立的验证能力和调整能力，不能轻信AI的结果。</p><p>同时，AI也是学习编程的好帮手，特别是针对具体代码的解读，针对具体算法的实现，AI可以提供24*7无休的技术咨询和答疑。但技术人员应该抱有一个开放的心态。很多程序员的习惯性思维是，我已经很清楚如何设计系统了，只是具体细节可以交给AI。那么所谓开放的心态，就是在设计，架构，以及更宽泛的问题上，可以向AI提问，可以咨询AI的建议，然后再针对自己的设计思想查漏补缺，坦白说AI的建议很多未必合理，但是作为查漏补缺，拓展思路，还是很有益处的，可能你本来有一个很庞大复杂的设计，咨询过后发现，AI直接告诉你，某个第三方工具简单调用就可以满足你的需求。</p><p>在我备课最后的时间里，open ai 又推出了代码解释器这样的妖孽产品，你看，我就觉得这次备课特别艰难，因为新东西层出不穷，不断打破旧有的认知。这个东西厉害在于，对小白用户过于友好，而且不仅仅解释代码，更是对数据解读有非常丰富的建议和方案，你喂给它一堆表单数据，它会给你很多值得分析的建议和方案，你可以让它对数据萃取，数据报告提任何要求，以后真的人人都可以当数据分析师了。那么如果还有不了解的读者，请搜索一下 open ai 代码解释器，建议使用谷歌搜索。</p><p>任何一个新产品，新工具的展开解读都可能占用大量的篇幅，所以我这里其实只是提供一些总纲，更多具体的内容希望你们自己能主动去挖掘，去深入了解。我还要重申一下，这不是实操课程，我的实力和精力也无法提供实操课程，所以更多的学习需要你们自主，主动的进行，而不是通过我的课程。</p><p>4 AI设计与绘图</p><p>midjourney拥有更强大的绘图能力，而stable diffusion可以私有化部署，训练私有化模型，也是很多垂直领域的首选，此外adobe公司的AI设计产品可以完美整合自己的所有其他产品，也有其优势所在。</p><p>和chatgpt 一枝独秀不同，在AI设计领域，多家并起，各有千秋，企业完全可以基于自己的诉求选择合适的产品。而且一些专门独特能力的第三方工具也可以和以上设计平台整合，比如专门用于抠图的segment anywhere，专门用于角色动作拖拽的DragGAN，在典型场景下都具有非常重要的意义。</p><p>AI设计不仅仅是设计所谓的宣传图，产品logo，也包括角色套图，道具套图，场景套图，套图设计需要更多的技巧。这里有一个关键认知需要说明，AI设计落地并不是设计出逼真的图片就够了，更重要的一个特点是可控性，你可以基于特定的场景，特定的角色，特定的动作以及特定的连续性，一致性设计图片，只有实现超强的可控性，才是可以用于真实落地的业务中，这也是这么多年来最大的技术突破，所以前面提到的一些抠图AI工具，一些拖拽AI工具，都是可控性的重要体现。</p><p>之前我备课的时候还准备强调，关于文字整合是AI制图很严重的缺陷，但现在这个问题似乎已经看到了曙光，技术的进步太快，以至于可能会超过我们学习和理解的速度。</p><p>目前一些市场巨大的典型设计场景如下</p><ul><li>产品和服务的LOGO设计，宣传海报设计。</li><li>游戏中的角色动作套图和道具套图。这需要prompts技巧，有些也需要训练本地模型，后续课程会做一些介绍。</li><li>电商中的模特服装图，比起传统昂贵的模特费用，可以用AI节省大量的成本。</li><li>装修行业的效果图，设计图。需要做本地的训练模型。</li><li>玩具，礼品，品牌周边的产品设计图，有些案例相当惊艳。</li><li>广告投放素材设计，这也是超级巨大的市场空间。</li></ul><p>但这里必须强调，AI虽然有很好的设计能力，人的想象力依然是最关键的，AI只是去替你实现你的想象力，一个缺乏想象力的设计者，恐怕很难用AI做出让人惊艳的设计图。</p><p>5 信息采集，反馈和自动化处理</p><p>AI可以编写爬虫代码，还有 autogpt加上浏览器插件，简单配置就可以实现自动的信息采集，整理和格式处理，甚至是情报分析。</p><p>利用AI快速打造一些诸如市场数据的跟踪，竞品分析，对于个人创业者，中小企业而言，都是很有意义和价值的事情。</p><p>同时，AI可以训练个人的历史文章和言论，或者通过特定信息做训练集，实现自动回复，自动应答的能力，诸如AI客服，AI咨询，AI自动响应，经过专门的训练，都是有较大机会的。</p><p>前几天王小雨在线下大会分享了很多个金融投资领域的AI工具，可以快速分析某个公司，某只股票的市场表现并进行市场预测，其实也是基于如上的原理，通过网上的数据采集和深度学习的一些技术进行评定，其实我备课的时候都没有听说过这些案例，这虽然暴露了我信息采集的匮乏，但也反证了我的推理逻辑是没有问题的。</p><p>6 题目设计与解答</p><p>你可以要求AI 站在不同角色，提出问题，比如，扮演面试官，或者某个领域的考官，让它给你提问，你来回答，然后AI对你的答案给予测评，或者告诉你合理的答案是什么。对hr招聘来说，这是很好的一种应用形态。</p><p>现在我看到越来越多人开始分享，让AI做角色扮演，提出问题的案例，很多都可以起到拓展思路，以及加深行业理解的价值。比如你是个求职者，你可以让AI先扮演某个领域的资深面试官，然后考核一下自己的准备工作，给出合理的优化方向，让自己能找到学习和前进的方向。比如你是个企业家，你要招聘一些自己不是很熟悉的领域内的人才，比如运营大牛创业者招聘技术合伙人，这在以往是很常见的能力无法覆盖的困境场景，你可以让AI参与面试题目的设计，并参与对面试者答案的评估。</p><p>7 音频与视频制作</p><p>这个也是最新产生突破的，AI孙燕姿已经非常惊艳了，我以前想在喜马拉雅开课，就是因为录制过程复杂，心生退意。但现在看看，如果可以用AI训练，那么做文字转音频的课程就没有什么太大的障碍。</p><p>目前用AI阅读小说的其实已经有很多实际案例，但是说实话，我经常在出租车上听到播放的AI语音小说， 声音质量真的惨不忍睹，那么这里其实有非常大的提升空间。</p><p>目前合成语音技术其实已经相当成熟，我们都听到了AI孙燕姿的惊艳表现。而训练自己的语音也有很多方案，比如google本身就有，那么也有朋友推荐bark的方案。当然这需要购买他们的一些算力。</p><p>中文讯飞的方案应该是非常成熟的，此外百度飞桨平台也有一些可以选择的方案。用自己的 声音，或者用明星的声音（可能需要授权）播放读物，网课，这个想象空间是极为巨大的。</p><p>AI视频目前也包括两部分，第一是利用提词策略，生成一些AI原生图片，然后再通过一些工具生成视频。其二是通过训练相关模特的日常表达，基于台词生成视频。</p><p>第一种已经有人展示了一些AI生成的动漫效果，以后动漫制作真的可能会有极大的效率提升。</p><p>而第二种，刘润的AI数字人已经表现相当惊艳，AI主播现在越来越多，硅基智能这家公司已经在这个领域有非常有意思的成功案例。</p><p>我所了解，帮助企业搭建数字人直播，已经成为一个非常具有利润的产业。</p><p><strong>以上，是职场中，AI可以发挥重大作用的典型场景，可以这么说，凡是需要电脑办公的场景，AI都是可以发挥重大作用的。</strong></p><h4 id="第四，对企业而言，利用AI的三重境界"><a href="#第四，对企业而言，利用AI的三重境界" class="headerlink" title="第四，对企业而言，利用AI的三重境界"></a>第四，对企业而言，利用AI的三重境界</h4><p>前面提到的是针对职场从业者的价值，现在说说对于企业而言，AI意味着什么。</p><p>第一重境界，就是常说的降本增效，那么越来越多的人告诉我，利用AI的工作效率可以提升3-5倍，更少的人可以干更多的事情，我厦门投资的公司也取消了很多外包合同，在游戏设计和翻译领域节省了大量成本。</p><p>任何不会使用AI提升效率的员工，在市场竞争的领域里是无法长期生存的。</p><p>我希望所有创业者要贯彻下去，让所有员工，只要是有使用电脑诉求的员工，都要全力拥抱AI，提升自己的产出效率，当然，必须承认，学习的过程中可能会效率下降。给3-6个月的过渡期，这个代价是值得的，但过渡期之后，依然无法拥抱AI提升效率的，可能需要创业者，企业家做出一些决断。</p><p>第二重境界，是服务能力和产品特性的升级，比如说这个企业原本只有两种语言客服，但是现在可以提供几十种语言的客服，原本客服每天响应时间很有限，现在可以做到24*7，AI客服可以让企业的响应能力得到极大提升。再比如游戏npc原本只能按部就班的与玩家沟通，现在可以根据玩家的言论智能回复，并且可以更好的动态规划游戏进程分支，让游戏可玩性极大拓展，这就是产品特性的提升。</p><p>那么我们看到厦门的两家公司，厦门美图秀秀，以及厦门稿定设计，全面拥抱AI后，产品特性提升带来了很好的经济效益和用户口碑。另外，微信公众平台工具壹伴也全面拥抱AI,做出了写稿辅助的特性，当然，实话说，我不是很喜欢这样的特性。</p><p>第三重境界，是创建新的商业模式，发现新的商业机会。</p><p>目前可以看到的案例有那个知名女网红，创建了AI陪聊的业务，让自己可以成为诸多男生的云女友，收入不菲。</p><p>前面也提到了AI股价预测的产品，在海外已经有成熟案例，也是这样的一种新型商业机会。</p><p>可以设想的，比如个人咨询服务，可以基于AI和自己的历史文章生成AI咨询，实现商业模式的拓展。还有就是AI陪护，针对年长，孤独，忧郁症等人群，提供心理陪护和聊天服务，这也是一种很有意义的业务形态。</p><p>这里需要很多想象力，必须说可能最有意思，最有价值的，我还没想到，可以持续观察。</p><p>黑灰产，黄赌毒永远是新技术使用最积极的。</p><h4 id="第五，对于科研和学术领域，AI也将具备非常巨大的想象空间。"><a href="#第五，对于科研和学术领域，AI也将具备非常巨大的想象空间。" class="headerlink" title="第五，对于科研和学术领域，AI也将具备非常巨大的想象空间。"></a>第五，对于科研和学术领域，AI也将具备非常巨大的想象空间。</h4><p>说完了职场，企业，说说科研和学术领域，原本我备课的时候并没有想强调这一点，或者认为这可能比较遥远，但最近陶哲轩的几篇推特正在充分证明这个领域的巨大想象空间。</p><p>众所周知，陶哲轩是这个世界上最顶级的数学家，拥有不可置疑的学术声誉，那么他认为并且正在实证， AI可以在解决复杂的数学证明上，为数学家提供必要的建议和参考，而且学术界也认为一些新的技术突破，未来有可能，AI可以独立完成数学证明工作。</p><p>我们知道最新AI技术突破的核心是推理能力，那么逻辑来说，基于人类已有的知识和数学界所谓的公理，来验证某些潜在的数学猜测，如果推理的机制足够强大，是有机会推导出很多复杂的证明过程。当然，我不认为当前阶段AI可以突破某些重要的数学猜想，但随着AI技术的进步，也许在未来的某些时间，这个是有相当可能性的。</p><p>另外值得一提的是，在高分子领域，包括蛋白质分子结构预测，包括医药辅助的分子晶型预测上，AI技术已经开始发挥重要作用。并且正在颠覆传统的技术手段。</p><p>物理学，化学，材料学，涉及到微观结构的探索，AI已经成为重要的辅助工具，而算力也成为重要的技术资源，我之前在直播讲过一个猜测，其实在很多领域这个已经是现实，就算算力成为科研的重要资源，而算力背后是匹配的AI 算法。包括deepmind研发的 alphafold 系统，已经被证明是可以改变行业科研效率的一个创举。</p><p>在对抗新冠病毒的药品研发上，AI技术实际上已经帮助辉瑞等药厂极大提升了研发效率，降低了研发成本，可能很多人不知道，还是来自于中国创业者的AI 技术。</p><p>今天新鲜看到的一个新闻，一个技术大牛刚发布的nature论文，通过最新的AI学习算法，在蛋白质分子预测上再次取得了突破。</p><p>并不只是计算机学科需要AI算法和算力的加持，物理学，化学，生物科学，材料学，到一定的深度，都需要。</p><p>我举例说明一下，比如电池电极充放电过程，一些理论上具有更高效率的电极材料，现实如何解决所谓的枝晶问题，这个是材料学上一个很前沿的课题，那么社会价值和商业价值也是无比巨大，通过AI技术结合分子动力学做一些场景模拟和分子预测，也许就是很有想象力的一个空间。</p><p>所以这里我强调一下，可能普通人离这条路很遥远，但如果子女是学霸，或者亲戚家有学霸子女，想要在理工科有所建树，希望去一些知名学校攻读博士学位，让他们务必理解这一点，算力和算法，可能是很多学科后续科研成果的重要保障。以前我讲过例子，传统的科研工作者，使用传统技术做科研，可能是手枪打靶，子弹有限，要瞄的很准才有收获，但是拥有算力和算法优势的科研工作者，是机关炮打靶，横扫一片。在高分子领域，这已经是有真实案例的。</p><h3 id="1-2-AI的发展与未来"><a href="#1-2-AI的发展与未来" class="headerlink" title="1.2 AI的发展与未来"></a>1.2 AI的发展与未来</h3><img src="/images/AIGC-2.png" class=""><p>这是seedv实验室的一张图，请注意这里的发展趋势是基于生成内容的可控性，那么可控性越强，实战落地的场景也就越丰富，其实我们今天已经站在初步思维逻辑可控和复杂推理逻辑可控的路上，而且在某些领域，可以说已经触碰到了复杂推理逻辑可控的门槛。所以这张图里提到的远景，我认为可能在几年，十年内的时间内是可以看到的。</p><p>实际上数学家陶哲轩已经表态说，AI有望在数学推理上达到和超越顶尖数学家的水平，而且这个时间可能并不遥远。</p><h2 id="2、关于AI的不足"><a href="#2、关于AI的不足" class="headerlink" title="2、关于AI的不足"></a>2、关于AI的不足</h2><p>正确认识 AI的不足，也要有发展的眼光，其实AI远远达不到完美，如果吹毛求疵，人类依然有很多可以骄傲的地方，但是我们认清它的不足，是为了更好的使用它，发展它，而不是否定它，拒绝它。</p><p>其实在我备课的准备期内，很多不足已经逐渐开始有了合理的解决方案，以至于需要不断调整内容来适应变化，也许再过一两年，这里列的一些问题都已经不再是问题。</p><p>但是必须强调，永远保持质疑能力和求证能力，不能对AI给出的结果完全信任，必须有自己的判断力，有自己的甄别能力，信息求证能力，这一点，在相当的时间内，依然是优秀人才需要保持的必要能力。</p><p>结合AI和搜索引擎，对结果进行二次核对，是很有必要的。</p><h3 id="2-1-时效性"><a href="#2-1-时效性" class="headerlink" title="2.1 时效性"></a>2.1 时效性</h3><p>数据大模型的时效性目前看上去并不理想，chatgpt4.0的语料仍然停留在2021年中下旬。最新的解决方案是整合了搜索能力，但搜索能力目前的整合表现还不是很尽如人意，毕竟搜索结果并没有经过合理的训练，所以语料时效性的问题，目前来看，搜索整合可能并不是最终的完美解决方案。</p><p>一些典型场景，比如你需要一些技术支持，编写一些代码或者需要一些技术参考，可能它给予的建议还是过时的，这是需要不断自己核对的。比如它不知道一些新的工具，新的特性，新的平台，比如用它来学习stable diffusion，就没有合理的建议和结果。</p><h3 id="2-2-上下文深度"><a href="#2-2-上下文深度" class="headerlink" title="2.2 上下文深度"></a>2.2 上下文深度</h3><p>上下文能力是chatgpt AI最大的突破，从技术原理来说，属于狂砸天文算力暴力突破的技术表现。但超过一定规模或层级后，它仍然存在处理的极限，也就是如果你需要非常深度的进行学习或者与AI探讨的时候，可能达到一定的层级，它会突然失去对话的焦点，开始偏离主题。</p><p>比如前几天和原创文学平台的创始人聊天，用AI续写小说目前看起来难以实现，因为它的上下文深度限制，无法完整记忆整部小说，所以续写逻辑就很难保障。</p><p>目前根据测试，正常情况下的沟通和征询建议，表现还是非常不错的。</p><p>那么最新发布的claude2的上下文长度继续增强，达到了100个token，而微软新论文解封transformer长度达到10亿，这都是备课时还没有的信息，也许很快，上下文深度的瓶颈就会彻底消除。新闻链接如下 <a href="https://mp.weixin.qq.com/s/k2X7iQBqPGGRKD2gomb92g">https://mp.weixin.qq.com/s/k2X7iQBqPGGRKD2gomb92g</a> ，有兴趣的自己去查阅了解。</p><h3 id="2-3-图片的连续性和一贯性保持"><a href="#2-3-图片的连续性和一贯性保持" class="headerlink" title="2.3 图片的连续性和一贯性保持"></a>2.3 图片的连续性和一贯性保持</h3><p>组图，套图设计是非常常见的实战场景，典型的如家居设计，设计师希望展示不同视角，光线下的家居设计图。比如游戏领域，需要在特定场景下展示不同视角，不同角色的动作分镜图，这些都是具有非常精确的背景图片信息的组图诉求，如果仅仅基于提示词或者图生图能力，其实很难保持这种需求下的图片的一致性和连续性。</p><p>目前需要一些高级技巧，比如通过保留图片种子，和一些第三方插件的使用，比如动作调整插件DragGAN，以及抠图插件segment anywhere，这个问题已经有了一些解决方案。并且已经有了一些成熟的案例，也就是我备课的期间，这部分的成熟案例还在呼呼的往外冒，但是如果是对效果要求非常苛刻的客户而言，希望AI生成的套组图片完全符合自己的预期目标，可能还不是完全可以随心所欲的事情。</p><p>这里我强调一下，AI绘图并不是我出一堆提示词生成一张漂亮图就可以的，玩玩可以，写公众号生成题图可以，大部分实际的工作场景，需要和特定元素有关，需要有特定的连贯性。比如电商需要和真实的商品，真实的模特进行合成。比如游戏需要角色和场景具有一致性要求。这也是前面提到的可控性，是技术落地很重要的指标。</p><p>不过这个领域的进步是相当迅速的，两三年前我觉得非常难以实现的能力现在已经被很多企业应用到实际场景中了，相信两三年后这些问题可能都已经有了很好的解决方案。</p><p>本来备课的时候还有一项，图片中的文字，这个曾经是AI设计很大的短板，就是你无法用AI实现图片背景中的特定的文字展示，比如图片上有个某某品牌的宣传语，但是现在新的技术升级已经克服了这个问题，所以这项不足基本上不存在了，不过对中文而言，可能效果仍有待提高。</p><p>这个坦白说我没有测试，如果有人有实测结果也欢迎分享。</p><h3 id="2-4-内容语料不完备和信息干扰"><a href="#2-4-内容语料不完备和信息干扰" class="headerlink" title="2.4 内容语料不完备和信息干扰"></a>2.4 内容语料不完备和信息干扰</h3><p>必须承认，AI目前所掌握的内容语料并不是完全准确的，而且在诸多信息的处理中，也存在较多噪音信息混淆，而且它的信息生成逻辑，本身确实也不是以准确度和真实性为优先考量的。</p><p>在咨询AI编程问题的时候，我发现，凡是涉及到第三方开源库的调用方法领域，它经常给出混淆的信息，比如它建议我使用开源库A，但是它给我的代码里，所有的调用方法其实是开源库B的，这样的问题我已经经历了很多次。而且我试了两三款不同的AI产品，这个问题是普遍存在的。</p><p>至于中国的历史名人，我们发现AI经常给出极为荒谬的答案，现代名人就更加荒谬，这些有些输入生成逻辑的偏差，有些也是语料中的噪音污染太多导致的。</p><p>所以这也需要强调信息核实能力，AI的答案是很好的建议和参考，但很多时候也要质疑并核对。</p><h3 id="2-5-专业问题上的判断高度不足"><a href="#2-5-专业问题上的判断高度不足" class="headerlink" title="2.5 专业问题上的判断高度不足"></a>2.5 专业问题上的判断高度不足</h3><p>我咨询过AI一些关于产品建议和运营建议的话题，我认为AI的答案其实是远胜于新入行的从业者，优于相当比例的从业者，而且，即便是针对行业资深的人来说，它的一些建议作为参考和思路拓展，还是有相当价值的，但是从整体来说，对要点的把握，对关键问题的把握，其实达不到顶级水平。</p><p>比如分析一些互联网产品的运营优劣，你作为一个第三方参谋，很有参考意义，但如果你把它当作运营总监，那其实是不太合格的。</p><p>我相信在其他专业领域也存在这类问题，它可以是很好的参谋，即便是资深专业人士，咨询它也有开拓思路，查漏补缺的价值，但前提是，资深人士能快速分辨出它答案中的亮点和不足，并且能快速忽略那些不足之处。然而如果不加分辨的进行采纳或者执行，可能就会有严重的问题。</p><p>比如美国某个律师用了AI给出的判例作为依据，最后被人查证发现全是子虚乌有，闹出了大乌龙，那么反而让自己丢了工作和信用。这个案例就非常有代表性。</p><h3 id="2-6-理解力方面仍然有提升空间"><a href="#2-6-理解力方面仍然有提升空间" class="headerlink" title="2.6 理解力方面仍然有提升空间"></a>2.6 理解力方面仍然有提升空间</h3><p>当然，我们也可以认为这个问题属于用户使用提词的问题，但比如我做这个备课，我也希望AI给我一些建议，当我问及普通人该如何使用AI改变生活的时候，它给出的答案更偏向于技术人员如何通过AI来创造一些应用可能性，它讲了很多AI可以应用的场景，但是这些建议是基于技术人员利用它所描绘的AI技术创建相关的应用，而不是普通人可以通过已有的AI平台可以快速实现的能力。</p><p>当然这里有很多高阶的玩家会用更多的沟通技巧来训练AI，实现自己的诉求，但毕竟，对于普通人而言，我们发现，AI在理解正常问题时，仍然存在很多和我们预期不一致的地方，也正是因为如此，提词技巧才会成为一种特殊的能力。</p><h3 id="2-7-伦理和安全问题"><a href="#2-7-伦理和安全问题" class="headerlink" title="2.7 伦理和安全问题"></a>2.7 伦理和安全问题</h3><p>很多科学工作者和社会学家认为，AI未来可能成为人类文明的威胁，或者会造成可能无法估量的损害，必须说，这种可能性是存在的。目前AI作为辅助决策，相对来说是安全的，但是如果让AI掌控更直接的决策能力，以及赋予AI自行动用资源能力，那么很多风险就会放大无数倍。</p><p>但我认为，这些事情对于我们普通人而言，其实想太多也没用，因为毕竟这不是我们能决定的事情，所以活在当下，为自己的事业和生活用好AI就可以了，没必要杞人忧天。</p><p>但必须强调，就是由于很多AI平台涉及海外的数据服务，那么在当前国内的安全法规情况下，敏感数据出境是很典型的合规风险，所以一些政府，金融机构以及涉及国计民生的企业，使用海外平台的AI产品，都是存在非常严重的违规风险的。</p><p>利用开源系统本地化搭建是相对稳妥的选择。但我们知道，有一些最好的产品并没有开源，而且本地搭建的成本也是很高的。</p><p>最近大家也看到了，国内发布了最新的生成式AI的管理办法，从业者需要认真阅读，当然，最终解释权不在我手里，这里也就不展开解读了，但从业者真的需要认真阅读，对很多中小团队来说，合规成本是相当惊人的，这也会导致部分AI落地的场景出现一些阻碍。</p><p>那今天就到这里，主要目的是介绍AI的前景，机会，以及需要正视的问题。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;AI时代已经来临，我们该如何认清AI的价值呢？&lt;/p&gt;</summary>
    
    
    
    <category term="AI" scheme="https://jamesyyang.github.io/categories/AI/"/>
    
    
  </entry>
  
  <entry>
    <title>Unix编程哲学</title>
    <link href="https://jamesyyang.github.io/2023/07/18/thinking-unix-philosophy/"/>
    <id>https://jamesyyang.github.io/2023/07/18/thinking-unix-philosophy/</id>
    <published>2023-07-18T03:22:32.000Z</published>
    <updated>2023-07-18T03:28:29.168Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下Unix哲学的几条准则，看似简单，但是往往我们容易忽视他的重要性。</p><span id="more"></span><p>(1) <code>小即是美</code>。相对于同类庞然大物，小巧的事物有着无可比拟的巨大优势。其中一点就是它们能够以独特有效的方式结合其他小事物,而且这种方式往往是最初的设计者没能预见到的。</p><p>(2) <code>让每一个程序只做好一件事情</code>。通过集中精力应对单一任务，程序可以减少很多冗余代码，从而避免过高的资源开销、不必要的复杂性和缺乏灵活性。</p><p>(3) <code>尽快建立原型</code>。大多数人都认同“建立原型”(prototyping)是任何项目的一个重要组成部分。在其他方法论中，建立原型只是设计阶段中一个不太重要的组成部分，然而，在Unix环境下它却是达成完美设计的主要工具。</p><p>(4) <code>舍高效率而取可移植性</code>。当Unix作为第一个可移植系统而开创先河时，它曾经掀起过轩然大波。今天，可移植性早被视作现代软件设计中一个理所当然的特性，这更加充分说明这条Unix准则早就在Unix之外的系统中获得了广泛认可。</p><p>(5) <code>使用纯文本文件来存储数据</code>。舍高效率而取可移植性强调了可移植代码的重要性。其实可移植性数据的重要性绝不亚于可移植代码。在关于可移植性的准则中，人们往往容易忽视可移植性数据。</p><p>(6) <code>充分利用软件的杠杆效应</code>。很多程序员对可重用代码模块的重要性只有一些肤浅的认识。代码重用能帮助人们充分利用软件的杠杆效应。一些Unix的开发人员正是遵循这个强大的理念，在相对较短的时间内编写出了大量应用程序。</p><p>(7) <code>使用shell脚本来提高杠杆效应和可移植性</code>。shell脚本在软件设计中可谓是一把双刃剑，它可以加强软件的可重用性和可移植性。无论什么时候，只要有可能,编写shell脚本来替代C语言程序都不失为一个良好的选择。</p><p>(8) <code>避免强制性的用户界面</code>。Unix开发人员非常了解，有一些命令用户界面为什么会被称为是“强制性的”(captive)用户界面。这些命令在运行的时候会阻止用户去运行其他命令，这样用户就会成为这些系统的囚徒。在图形用户界面中,这样的界面被称为“模态”(modal)。</p><p>(9) <code>让每一个程序都成为过滤器</code>。所有软件程序共有的最基本特性就是，它们只修改而从不创造数据。因此，基于软件的过滤器本质，人们就应该把它们编写成执行过滤器任务的程序。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录一下Unix哲学的几条准则，看似简单，但是往往我们容易忽视他的重要性。&lt;/p&gt;</summary>
    
    
    
    <category term="随想杂谈" scheme="https://jamesyyang.github.io/categories/%E9%9A%8F%E6%83%B3%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>Azure中的App如何访问数据库</title>
    <link href="https://jamesyyang.github.io/2023/06/26/azure-app-connect-mysql/"/>
    <id>https://jamesyyang.github.io/2023/06/26/azure-app-connect-mysql/</id>
    <published>2023-06-26T12:07:31.000Z</published>
    <updated>2023-06-26T12:19:39.922Z</updated>
    
    <content type="html"><![CDATA[<p>Azure中你部署的任何东西都叫做资源，比如VM，container等。那么资源间如何互联互通呢？</p><span id="more"></span><p>当然是通过网络，不过这个网络不是真的我们理解中的网络，而是虚拟网络（VNET），类似K8S中的网络一样。</p><img src="/images/azure-vnet.png" class=""><p><code>需要记住的是，VNET间默认不互通，但VNET中的Subnet是默认互通的</code></p><p>那么回到标题的问题，比如我部署了一个App和一个数据库，App如何访问到数据库呢？</p><p>有下面三种方式。</p><p><strong>第一种，数据库暴露在公网，App通过公网访问。</strong> 安全起见，可以为App添加白名单。</p><img src="/images/App-Mysql-Public-Net.png" class=""><p><strong>第二种，App和数据库都添加到一个VNET中。</strong> </p><img src="/images/App-Mysql-VNet-Endpoint.png" class=""><p><strong>第三种，App和数据库都添加到一个VNET中，但是通过专用endpoint访问。</strong> </p><img src="/images/App-Mysql-VNet--Private-Endpoint.png" class="">]]></content>
    
    
    <summary type="html">&lt;p&gt;Azure中你部署的任何东西都叫做资源，比如VM，container等。那么资源间如何互联互通呢？&lt;/p&gt;</summary>
    
    
    
    <category term="Azure" scheme="https://jamesyyang.github.io/categories/Azure/"/>
    
    
  </entry>
  
  <entry>
    <title>Azure订阅和租户的关系</title>
    <link href="https://jamesyyang.github.io/2023/06/26/azure-subscription-ad/"/>
    <id>https://jamesyyang.github.io/2023/06/26/azure-subscription-ad/</id>
    <published>2023-06-26T12:02:57.000Z</published>
    <updated>2023-06-26T12:05:26.993Z</updated>
    
    <content type="html"><![CDATA[<p>Azure中订阅和租户的关系，一直比较绕，今天总算有个图说的比较清楚了。</p><span id="more"></span><img src="/images/azure-sub-ad.png" class="">]]></content>
    
    
    <summary type="html">&lt;p&gt;Azure中订阅和租户的关系，一直比较绕，今天总算有个图说的比较清楚了。&lt;/p&gt;</summary>
    
    
    
    <category term="Azure" scheme="https://jamesyyang.github.io/categories/Azure/"/>
    
    
  </entry>
  
  <entry>
    <title>架构师到底是干什么的？</title>
    <link href="https://jamesyyang.github.io/2023/06/23/cognition-what-architect-do/"/>
    <id>https://jamesyyang.github.io/2023/06/23/cognition-what-architect-do/</id>
    <published>2023-06-23T06:22:01.000Z</published>
    <updated>2023-06-23T09:33:37.415Z</updated>
    
    <content type="html"><![CDATA[<p>可能每个软件公司都会有一个岗位：架构师。那么到底架构师是干什么的呢？今天我们来简单探讨一下。</p><span id="more"></span><p>我在<a href="/2023/04/08/cognition-how-communication-architecture/" title="如何说清楚软件架构">如何说清楚软件架构</a>这篇文章里曾经说过一个观点：<code>软件架构是用来说清楚一个事物的结构的</code>。</p><p>我们稍微深入一下。</p><p>这里的<code>事物</code>通常就是指一个<code>系统</code>。<code>结构</code>通常就是指系统里的<code>实体</code>以及他们之间的<code>关系</code>。那么就是说，<strong>架构师的职责就是做系统设计，明确系统中的实体以及实体间的关系。</strong></p><p>当然，架构师肯定不会是做一个凭空的设计，设计的来源通常就是<code>产品的需求</code>，需求作为输入，架构作为输出。我们可以用下面这个图来做一个表示：</p><img src="/images/architect-task.png" class="" width="800"><p>这个图的结构类似一个沙漏，上面的部分是一个从需求到目标的收拢过程。需求来自产品的各方利益相关者，架构师应该和产品经理一起逐步将需求明确，聚焦到几个具备可行性的目标上面。在这个过程中，应该保持和需求方的沟通，减少过程中的歧义。当然，少不了的重要工具，就是排优先级了。</p><p>接下来就是提出<code>概念</code>的阶段。概念是一种最为简单的系统表示方式。是从需求中提炼出来的，因为这个时候还没开始做设计，我们需要有一些方式来统一表达我们即将要做的东西。</p><p>那么为什么需要<code>创造力</code>呢？因为产品还没有做出来，这个东西有可能是一个全新的，也有可能是和某一个东西类似的。那么在这个阶段，架构师可以做一些头脑风暴，把系统中可能有的功能和可能的交互方式描述出来。所以，这其实就是一个<strong>需求细化</strong>的过程。</p><p>最下面就是架构设计的过程了。它又会是一个<code>分解</code>的过程。这个就回到我们上一篇文章提到的那个逐步细化结构的过程。</p><p>但是，这里要提到一个<code>复杂度</code>的概念。由于系统本身包含了那么多的实体，以及实体间的关系，所以任何复杂度是任何系统都必备的。而这个复杂度越高，人理解起来越困难。架构师的任务就是要管理这个复杂度，通过<code>分解、抽象、分层</code>等手段，将复杂度“隐藏”起来。</p><p>所以，一个架构做的好与不好，也可以通过复杂度来对它进行一个衡量。所谓<strong>高内聚，低耦合</strong>其实就是在说这个事情。</p><p>小结一下，架构师在一个公司里面其实就是扮演的一个<code>承上启下</code>的角色。是一个需求能否转化为落地方案的关键。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;可能每个软件公司都会有一个岗位：架构师。那么到底架构师是干什么的呢？今天我们来简单探讨一下。&lt;/p&gt;</summary>
    
    
    
    <category term="认知杂说" scheme="https://jamesyyang.github.io/categories/%E8%AE%A4%E7%9F%A5%E6%9D%82%E8%AF%B4/"/>
    
    
    <category term="架构" scheme="https://jamesyyang.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>从产品架构谈开拓新业务</title>
    <link href="https://jamesyyang.github.io/2023/06/21/product-info-architec/"/>
    <id>https://jamesyyang.github.io/2023/06/21/product-info-architec/</id>
    <published>2023-06-21T06:02:06.000Z</published>
    <updated>2023-06-21T06:24:03.830Z</updated>
    
    <content type="html"><![CDATA[<p>我们做技术的经常讨论技术架构，那么产品也有架构吗？</p><span id="more"></span><h2 id="产品架构"><a href="#产品架构" class="headerlink" title="产品架构"></a>产品架构</h2><p>任何产品都是一类信息的承载工具，那么产品架构就是说：<code>你的产品将以何种方式向用户呈现信息</code>。</p><p>当然呈现的方式一定和你的产品目标有非常紧密的关系，产品提供什么服务？产品创造何种用户价值？</p><p>这两点决定了用户使用产品的方式，如何一层一层深入到产品功能里。也就是<code>用户路径</code>。</p><p>可以想象，如果没有这样的架构，一股脑的把产品所有信息，所有功能抛到用户面前，用户会是什么感受？打开了一个百宝箱？</p><h2 id="开拓产品新业务"><a href="#开拓产品新业务" class="headerlink" title="开拓产品新业务"></a>开拓产品新业务</h2><p>那么产品架构和开拓新业务有什么关系吗？</p><p>有的，非常紧密。</p><p>当老板说我们要做一个新业务的时候，你是不是也会问自己或者问老板，这个新业务合理吗？是拍脑壳拍出来的吗？</p><p>所以，有了产品架构后，这个问题就有了思考的依据，至少可以从两点来思考：</p><p><strong>第一，这个新业务在我们产品架构上属于哪个路径上的分支吗？</strong></p><p>如果是，那么至少逻辑上是合理的，并且如果和主路径耦合很深，那么这个合理性就会越强。同时，这个新业务可以自然的导入产品的流量。</p><p>这样的情况是最好的，可以让我们的产品逐步丰满起来，同时就像一个大树一样，是一个自然生长的过程，不太容易出现熵增的情况。</p><p><strong>第二，这个新业务是用户在产品主路径之外的活跃行为。</strong></p><p>举个栗子，微信的产品经理发现用户经常会把一个图片发给多个自己的好友，于是孵化了朋友圈这个功能。（这个是我编的）</p><p>那么，在以上两点之外的新业务，就要十分小心了，可能是拍脑壳拍出来的。因为需求并不来自于现有产品架构里的任何分支。</p><p>相当于是从无到有造一个新的产品出来。在今天这个情况下，几乎能想到的需求都有不止一个产品能够使用，所以不存在<code>价值洼地</code>。</p><p>并且，这个全新产品可能无法分享到主产品的流量，就需要一个冷启动的过程，不确定性非常高。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>互联网时代的大跃进已经结束，任何业务都要讲ROI，良好的产品架构是基础。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;我们做技术的经常讨论技术架构，那么产品也有架构吗？&lt;/p&gt;</summary>
    
    
    
    <category term="产品微言" scheme="https://jamesyyang.github.io/categories/%E4%BA%A7%E5%93%81%E5%BE%AE%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>35岁危机是因为活久见？</title>
    <link href="https://jamesyyang.github.io/2023/06/20/thinking-beyond-cycle/"/>
    <id>https://jamesyyang.github.io/2023/06/20/thinking-beyond-cycle/</id>
    <published>2023-06-20T11:41:29.000Z</published>
    <updated>2023-06-20T12:42:38.486Z</updated>
    
    <content type="html"><![CDATA[<p>今天看到了35岁危机的另外一个解释，很有趣，也蕴含了一定的道理。</p><span id="more"></span><h2 id="35岁危机是活太久？"><a href="#35岁危机是活太久？" class="headerlink" title="35岁危机是活太久？"></a>35岁危机是活太久？</h2><p>先引用一下那段有意思的文字。</p><blockquote><p>你知道为啥古人没有35岁危机?</p><p>因为他们活不到35。</p><p>你真正的问题没有那么多，你真正的问题就一个,你活的太长了。你活得那么长,问题不可能不暴露。</p><p>你活得比行业的寿命都长，你活得比爱情的保质期都长，你活得比技术的周期，产品的周期都长。</p><p>那怪谁?</p><p>你本来不用学那么多的,你随便学一样东西，产品周期还没到,你先挂了,啥问题都没有。</p><p>古人活30多岁就挂了,换句话说,他一出生,距离自己挂,中间只需要在这个世界上熬30多年。我所在城市的人均寿命80多岁，我现在才40多,换算过去，我相当于一个古代的婴儿，甚至是胎儿。</p><p>我可以觉得自己已经40多了，所以不用思考了，不用学习了，不用拥抱变化了，可以吗?</p></blockquote><p>这个文字虽然有一点戏谑的成分，不过暗含了一个道理，就是<code>周期</code>。</p><h2 id="什么是周期？"><a href="#什么是周期？" class="headerlink" title="什么是周期？"></a>什么是周期？</h2><p>周期原本是一个物理概念，意思是：<strong>事物周而复始的变化过程中循环一次所经历的时间</strong>。例如，地球绕太阳公转一圈的时间就是一个公转周期，大约是365天。</p><p>后面人们发现，大部分事务发展的规律其实都是一个周期循环的过程。例如经济。经济周期是指经济运行中周期性出现的经济扩张与经济紧缩交替更迭、循环往复的一种现象。当然，细分到经济活动中的各个行业也是一样。</p><p>但是，在经济活动中的周期和地球围绕太阳转还不一样，两个周期并不会是完全重合的。也就是说每个周期都会有扩张，但是扩张的原因和行业可能不一样。也就是俗话说的<code>风口</code>是不一样的。</p><p>正是由于每次的风口不一样，我们的社会才会呈现多样性，人才和资源才能够流动起来，不会变成一潭死水。</p><p>由于现在是和平年代，科技发达了，人的寿命增加了，退休年龄延迟了。所以，在你的职业生涯中，一定会遇到几个完整的经济周期。</p><p>所以，不是35岁的你遇到了危机，而是35岁的你遇到经济周期调整时，应当如何应对，如何穿越？</p><h2 id="如何穿越周期？"><a href="#如何穿越周期？" class="headerlink" title="如何穿越周期？"></a>如何穿越周期？</h2><p>其实<code>穿越周期</code>这个提法我觉得不准确，穿越是目的，关键是怎么穿越？</p><p>回答这个问题之前，我们要先想明白一个问题，为什么经济就不能一直扩张呢？不说经济学上的大道理，最简答的一个答案就是，它不符合熵增定律。所以，事物发展到一定阶段，一定是混乱的，无序的。要想不走向灭亡，必须对抗熵增。</p><p>所以，经济紧缩就是一个对抗熵增的必然结果，剔除冗余，剔除腐朽，重获新生。</p><p>讲到这里，就是想说明一个问题，<code>周期其实就是熵增到熵减的一个自然规律</code>。既然是自然规律，我们就不要去对抗它，而应该顺从它。</p><p>当整个大环境的熵很高的时候，当行业都开始做熵减运动的时候，你就应该和大家一起同流合污，不要擅自妄动。<code>穿越周期的前提是你得熬过去，活下去。</code></p><h2 id="如何做熵减？"><a href="#如何做熵减？" class="headerlink" title="如何做熵减？"></a>如何做熵减？</h2><p>我们经常说，风来的时候猪都能飞。那没风的时候呢？如果你学不会飞，那么会摔得很惨。</p><p>熵减的时候就是没风的时候，没有了外力的推动，就得全靠自己了。个人如此，企业也一样。</p><p>所以，最近有个说法，产品经理必须转型运营了。为什么？如果说产品是决定做什么的话，那运营就是洞察如何做得更好。</p><p>在没风的时候，比拼的就是内力，<code>谁能做的更好，更有效率，谁就能活下去</code>。</p><p>当然，在修炼内力的同时，也需要蛰伏待机，观察下一个周期出现的时间和位置，<code>提前进入这个生态，占一个有利位置，这样你才能再次随风飞翔</code>。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天看到了35岁危机的另外一个解释，很有趣，也蕴含了一定的道理。&lt;/p&gt;</summary>
    
    
    
    <category term="随想杂谈" scheme="https://jamesyyang.github.io/categories/%E9%9A%8F%E6%83%B3%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="增长" scheme="https://jamesyyang.github.io/tags/%E5%A2%9E%E9%95%BF/"/>
    
    <category term="周期" scheme="https://jamesyyang.github.io/tags/%E5%91%A8%E6%9C%9F/"/>
    
  </entry>
  
  <entry>
    <title>内容产品</title>
    <link href="https://jamesyyang.github.io/2023/06/05/product-content-based/"/>
    <id>https://jamesyyang.github.io/2023/06/05/product-content-based/</id>
    <published>2023-06-05T00:47:03.000Z</published>
    <updated>2023-06-05T04:39:33.113Z</updated>
    
    <content type="html"><![CDATA[<p>最近看了一些关于内容产品的资料，今天做一些梳理。</p><span id="more"></span><h2 id="什么是内容产品"><a href="#什么是内容产品" class="headerlink" title="什么是内容产品"></a>什么是内容产品</h2><p>一句话定义：通过内容聚集用户，打造流量平台，用户在产品中主要是进行内容消费，一般具有kill time（消耗时间）的属性。</p><p>通俗来说，我们能够用<code>刷</code>来形容的产品，基本都是内容产品。比如：抖音，小红书，头条等等。</p><h2 id="内容产品的分类"><a href="#内容产品的分类" class="headerlink" title="内容产品的分类"></a>内容产品的分类</h2><p>分类的话，就看用户消费内容要达到一个什么目的。比如下面几种场景：</p><ul><li>获得资讯：网易新闻，今日头条等。</li><li>寻找认同：社区，社交型，比如微博，豆瓣。</li><li>购买消费：内容电商，比如最近很火的小红书，点评也算。</li><li>影音娱乐：腾讯视频，网易云音乐等。</li><li>学习进步：网课类的，比如极客时间，知识星球等。</li></ul><p>当然，也可能几种场景同时存在的。</p><h2 id="怎么做内容产品"><a href="#怎么做内容产品" class="headerlink" title="怎么做内容产品"></a>怎么做内容产品</h2><p>好了，其实概念很简单，但是，如果想自己做一个内容产品，应该如何下手呢？</p><h3 id="内容洼地"><a href="#内容洼地" class="headerlink" title="内容洼地"></a>内容洼地</h3><p>我们需要靠内容来聚集一批用户，那么首先得找到一个<code>用户感兴趣的话题，这就是内容洼地</code>。</p><p>但是，既然要投入成本做一个产品，那么这个话题还要具备一定的ROI。</p><p>所以，这个内容洼地应该具备下面几个特征：</p><ul><li>对这个话题感兴趣的用户，<code>基数不能太小</code>。</li><li>这个话题你能找到<code>高质量</code>的创作者。</li><li>这个话题具备<code>持续性</code>的消费能力，不是一次性的。</li></ul><p>这个时候，你闭眼想一下，是不是好像你生活的方方面面都有一个甚至几个APP可以照顾到了？衣食住行娱乐各个方面都有。</p><p>所以，这样的内容洼地其实已经很少了。当然，不排除随着科技的进步，在很多比较隐秘的细分领域，可能还存在这样的洼地，就看大家是不是足够敏感。</p><p>比如最近火起来的ChatGPT，连搬运账号可能都做了不少产品。</p><h3 id="内容生产"><a href="#内容生产" class="headerlink" title="内容生产"></a>内容生产</h3><p>找到了内容洼地后，如何来生产内容呢？这里就提到了大家熟悉的几个名词：</p><ul><li>PGC：专业生产内容。提供内容的是专业的团队。</li><li>UGC：用户产生内容。普通业余用户。</li><li>AIGC：最近流行的，由人工智能生产内容。</li></ul><p>不管哪种方式，在产品冷启动的阶段，一定是需要质量的。并且在产品起步的初期，往往这个阶段的内容，就决定了整个产品的<code>调性</code>。而这个调性才能吸引一批“志同道合”的用户进来。</p><p>人与类聚，物以群分。能够靠内容聚集在一起的，至少都是对这个内容有一定的认同感的。所以高质量的种子用户，对产品的起步非常重要。</p><p>当然，在产品运营到一定规模后，用户多了，那么对于内容的需求也就比较多样了，可能初期的种子用户已经不能够提供足够消费的内容了。这个时候就需要去挖掘优秀的站内作者，办法也比较多。关键就是需要去找到这样的作者，给他们的内容足够的曝光率，让内容的成功给他们提供足够的创作动力。</p><h3 id="内容分发"><a href="#内容分发" class="headerlink" title="内容分发"></a>内容分发</h3><p>有了内容后，就需要让喜欢这个内容的用户去看到这个内容。</p><p>也就是如何让内容和用户产生高效的连接。通常的做法有几种：</p><ul><li>通过问答</li><li>通过搜索</li><li>通过推荐</li></ul><p>当然，目前事实已经证明，随着算法的逐步优化，推荐已经完胜。代表性的就是字节系的产品。毕竟，推荐是唯一用户不用动脑子的方式。</p><p>这个世界上，能提好问题，善于使用搜索引擎的用户，毕竟还是少数。而且，人的大脑的特征也是<code>节能型</code>的，能少用一下就一定不会多转一圈。</p><p>不过，我们要认识到，好的推荐都是基于非常完备的<code>用户画像</code>的，所以如何高质量的采集用户的行为数据，这个就是要做好的功课了。</p><h2 id="内容电商"><a href="#内容电商" class="headerlink" title="内容电商"></a>内容电商</h2><p>最后说一下内容电商，毕竟我们是做电商的。</p><p>首先要想明白一点，在交易这个事情上，内容有什么作用？主要是两个方向：</p><ul><li>辅助决策时，已有购买意愿，参考内容表达来增强购买的决策力，大众点评和知乎是典型案例</li><li>消费内容时，发现认知之外的商品，被通过内容传导的商品体验打动，视频电商是典型案例</li></ul><p>前者的转化率比较好，因为用户已经有购买的意愿了，属于<code>人找货</code>的范畴。所以用户点评一定要做好啊，当年为什么Amazon花那么大力气让顾客写点评就这个原因，这个东西一旦积累起来了，对于转化用户的购买意愿，效果是非常好的。</p><p>后者就是最近非常流行的<code>种草</code>行为了。通过拓展用户的消费认知，同时获取流量与转化。但是，种草是在内容平台，不是在电商平台。因为只有内容平台才有这么大的流量，才能聚集起那么高的人气。</p><p>综合来看，电商平台如果要做内容，思路不应该是和内容平台抢资源，而应该是通过和内容平台合作做好引流。同时在自己的电商平台提供<code>多样化的商品发现</code>的能力。这一点，可以看看网易云音乐的<code>心动</code>模式，反馈非常的好。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在内容为王的时代，一切皆内容。本篇只是一个提纲挈领、抛砖引玉，后续还会继续深入探讨。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近看了一些关于内容产品的资料，今天做一些梳理。&lt;/p&gt;</summary>
    
    
    
    <category term="产品微言" scheme="https://jamesyyang.github.io/categories/%E4%BA%A7%E5%93%81%E5%BE%AE%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>高管应该具备怎样的素质</title>
    <link href="https://jamesyyang.github.io/2023/05/28/thinking-what-vp-should-do/"/>
    <id>https://jamesyyang.github.io/2023/05/28/thinking-what-vp-should-do/</id>
    <published>2023-05-28T00:47:39.000Z</published>
    <updated>2023-05-28T01:00:33.171Z</updated>
    
    <content type="html"><![CDATA[<p>今天看到纯银在微博上的一个总结，挺好的，分享给大家。</p><span id="more"></span><h2 id="纯银原文"><a href="#纯银原文" class="headerlink" title="纯银原文"></a>纯银原文</h2><p>如果是我佩服的产品高管（大厂VP这个级别），应该具备怎样的素质呢？</p><p>常见的观点是，大项目的管理能力，大团队的组织建设能力，协调调动能力，战略规划能力，面对大老板的向上管理能力等等。</p><p>但我的看法不太一样，因为具备这些能力的高管，我见过的那几个，一样暮气沉沉。</p><p>而我看重这个位置上的两样能力。</p><p>1、<strong>嫡减的能力</strong></p><p>我前几天发了一篇微博讲大企业的嫡增，怎样才能减缓嫡增的速度？怎样才能延迟堕入大酱汤一般的官僚主义？这是我看重的.自我要求极高的极聪明的人才能做到这一点，而嫡减对于大团队长期保持好状态是至关重要的。</p><p>2、<strong>洞察力</strong></p><p>这么讲很虚，那我换个角度描述，内部投资的能力。</p><p>到了管理几百几千人的高管位置，手握大量的资源，角色就像一个手握二百亿的投资机构一样，决定资源投给谁，投多少。尤其是：</p><ul><li>哪些项目是值得重点投入的</li><li>哪些业务是在当前约束下合理的</li><li>哪些业绩是有价值的，哪些是蒙混过关</li></ul><p>内部投资的战功，在过去更依赖时代红利和公司基因，2020年以后，则更依赖高管的洞察力，按我的风险偏好，在没有明确机遇的时候，更愿意投给长期价值，投给“有市场信号，有演变概率”的事情。</p><p>但很显然，大多数高管并不是这么做的。全行业疯批一样去抄小红书。</p><p>所以姚晓光对QQ频道的投资，我是很佩服的。短期内可能没有大的收益，但长期来看，值得投资这一笔长期价值。</p><p>更精彩的案例，则是纳德拉对OPENAI的天文数字投资。</p><p>如果一个高管，既能控制好嫡减，又能有深刻的洞察力，在市场机遇好的时候找到投入产出比最高的项目，在市场机遇差的时候进行长期价值投资，他就是我心目中的英雄.</p><h2 id="老杨点评"><a href="#老杨点评" class="headerlink" title="老杨点评"></a>老杨点评</h2><p>熵增定律在旧文<a href="/2023/02/16/thinking-why-goals/" title="为什么制定目标">为什么制定目标</a>里已经介绍过。</p><p>熵增是大自然的规律，其结果就是无序、混乱。而一个组织上下目标一致就是非常好的对抗熵增的办法。</p><p>但是，目标管理只是一种手段，而最难的是决定要干什么，这就需要洞察力了。</p><p>一个优秀的高管，就是在企业中能指引方向，带领公司更上一层楼的那个人。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天看到纯银在微博上的一个总结，挺好的，分享给大家。&lt;/p&gt;</summary>
    
    
    
    <category term="随想杂谈" scheme="https://jamesyyang.github.io/categories/%E9%9A%8F%E6%83%B3%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="管理" scheme="https://jamesyyang.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
    <category term="熵增" scheme="https://jamesyyang.github.io/tags/%E7%86%B5%E5%A2%9E/"/>
    
  </entry>
  
  <entry>
    <title>关于数字化转型</title>
    <link href="https://jamesyyang.github.io/2023/05/04/thinking-digital-transformation/"/>
    <id>https://jamesyyang.github.io/2023/05/04/thinking-digital-transformation/</id>
    <published>2023-05-04T03:19:08.000Z</published>
    <updated>2023-05-04T03:38:25.149Z</updated>
    
    <content type="html"><![CDATA[<p>对于企业而言，数字化转型早已经是一个绕不开的话题。到底什么是数字化转型？好像很少有人说清楚，今天看到一篇文章，还不错，转给大家看看。</p><span id="more"></span><h2 id="数字化转型到底在转什么？"><a href="#数字化转型到底在转什么？" class="headerlink" title="数字化转型到底在转什么？"></a>数字化转型到底在转什么？</h2><p>“转型”这个词比较好理解，每家公司或多或少都经历过转型。一家公司，不同发展阶段的重心是不一样的，之前的优势可能到现在就是劣势了，为了发展，所以需要不断转型。但是，加了一个定语“数字化”后，传统企业的管理者们就蒙圈了。他们不知道数字化转型到底意味着什么，毕竟数字化是个新东西。</p><p>接下来，我从宏观、中观和微观三个层面分别聊聊我的看法。</p><p><code>首先，从宏观来讲，数字化转型是大势所趋。</code>但是，注意不要把数字化转型中的数字化简单理解为某一种技术，而是应该理解为<code>我们不断地通过技术手段打破空间的限制，使企业可以更方便地从事各种生产或经营活动。</code></p><p>人类社会，从农业化，到工业化、信息化，再到现在的数字化，一共经历了 4 个阶段。这期间有两个规律没变，一是人类<code>通过技术的手段不断地打破空间对活动的限制</code>；另一个是<code>个体的能力因为技术的发展而逐渐变强</code>。</p><p>这几年，很多人喊元宇宙，虽然有时候大家觉得很虚，但这个技术的探索方向我认为没错。它本质是要在虚拟空间里，通过提升协同效率来提升工作效率，让个人不再受地理空间的限制做事。这是顺应趋势的，只是现在的时机还不成熟。</p><p><code>我觉得数字化会让“渠道”发生很大变化。</code>渠道就是你跟所有人的联系方式，无论是 ToC 的企业还是 ToB 的企业都有自己的渠道。回顾一下最近这十年，移动互联网带来的最大变化就是渠道，渠道革命对我们整个的商业形态影响都很大。顺着数字化的方向往后走，将来就是 3D 渠道。渠道不断升级就是数字化技术带来的自然结果。</p><p>渠道的变化，我看到大家鲜有提到，其实是挺重要的。特别是对于传统企业而言。</p><p>另一个趋势是随着技术的发展，每个人的能力都在增强。 就像最近很火的 ChatGPT，它本身就是各种知识封装，借助 ChatGPT 助手，每个人掌握的东西瞬间增加很多。比如更强的对话能力。实际上，随着数字化技术的发展，借助工具，个体的能力也在不断增强，这带来很多变化。它也一定会反映在商业形态上，甚至会改变企业的组织管理和个体的工作方式。</p><p><code>中观层面，在数字化条件下，企业到底应该是什么样的。</code>我们现在的传统工厂，引入了一些先进的设备，但是整体上来讲，工厂并没有完整连接起来。数字工厂是指不仅要给工厂引进新的设备，还要让这些设备通过各种手段能够连接在一起，让整个工厂像数字化系统一样高效运转。</p><p>以前，生产设备上虽然有系统，工作人员还要去车间的机床上看数据，但是，现在人们希望坐在办公室就能看到数据，坐在办公室里就能调配整个生产线。但这只是一小步，如果真正产生作用，你会发现内部的管理应该会发生很大变化，<code>这个时候大家就需要琢磨，我们应该把什么样的业务知识转移到我的业务系统里。</code></p><p>这是我们设计数字化企业时应该考虑的事情。数字化转型绝对不是简单地把一个线下的流程搬到线上去，而是要把业务经验和知识注入到系统。<code>如果能够站在这个视角看问题，等你把所有设备系统连上了，用数据改善或者是改变业务，用数据驱动决策，把业务经验和知识转化成软件里的算法或者功能，把它放到管理系统，管理工厂这件事就变得越来越有效率了。</code></p><p><code>再往微观讲</code>，时代的变化必然会作用到每个人身上，企业对劳动者的技能要求也在发生变化。很多人都跟 ChatGPT 聊过天，聊天的过程中就能发现，如果这个人有很强的结构化思维，善于层层递进，善于用条件约束大模型，以指定的资料要求它分析，那 ChatGPT 产生的结果会比你泛泛地聊天要好。</p><p>泛泛的纯用自然语言提问，就是找了个知识比较丰富的陪聊，那不是真正的生产工具，生产工具是你给他明确的约束条件，他就会产生预期结果。不管是 ChatGPT，还是其它工具，我认为核心能力之一是一个人的结构化思维。在数字工厂里，靠用结构化的思维把流程、数据都梳理好，你提到的东西才可能被翻译为软件，翻译为数字工具。我们要增强结构化思维，能够说清自己到底要啥，然后把它转变成数字工具，让自己成为一个合格的数字化劳动者。</p><p>还有一点需要提醒，随着技术的发展，从业者的技能也需要随之变化。很多传统企业的人，思想封闭，技能很多年没有变过，这是值得警惕的。</p><h2 id="数字化转型与信息化的区别是什么？是否有核心的技术差距？"><a href="#数字化转型与信息化的区别是什么？是否有核心的技术差距？" class="headerlink" title="数字化转型与信息化的区别是什么？是否有核心的技术差距？"></a>数字化转型与信息化的区别是什么？是否有核心的技术差距？</h2><p>关于这个问题，<code>我的看法就是你要分不清就别分了，只要方向对了就行。因为我们大多数时候是做实践，并不是做理论研究，只要把握住大方向就行。</code>这个方向你看国家政策也好，看互联网行业的实践也好，看这两年行业的趋势也好。我理解数字化就围绕三件事：</p><p>第一，数据到底能不能成为一个新的生产工具？能不能实现数据驱动决策，驱动业务？第二，以数据为第一要素，围绕着数据做工具。第三，通过移动互联网拓展内外部销售渠道。</p><p>你只要沿着这三个方向走，就都是数字化。我常对企业管理者说，你要是能把数据分析明白，把数据对生产经营的作用发挥出来，没有人敢说你不是数字化。</p><p>信息化这个词最早是一位日本学者在上世纪 60 年代提出来的，他还是个人文学者，不是干计算机的。提出来之后西方也比较接受，后来就成了大家公认的信息化了。但他那时候提的信息化比较简单，你可以认为就是计算机的使用率和网络的普及率，这俩就算是衡量信息化的标准。其实还有一条：在计算机和网络的普及下人们行为的合理化。但这一条就比较虚了，不好度量。</p><p>我们常说搞信息化的时候做的软件全是竖井烟囱式开发，相互之间无法连接，业务协作不好，数据也不一致，总有各种数据质量问题。<code>如果从技术延续的角度来看，数字化技术也是信息化技术的延续。数字化相较信息化，最大的差别是全局化的整体设计。</code>数字化就像比尔·盖茨提出的数字神经系统那样，要大家做的系统不再分割，能连上，数据和业务能够贯通。</p><h2 id="老杨总结"><a href="#老杨总结" class="headerlink" title="老杨总结"></a>老杨总结</h2><p>一句话简而言之：当信息化进展到一定程度，人也好，设备也好，都已经上系统，联网。那么如何让他们产生<code>有效的连接</code>，从而提升社会的<code>效率</code>。这个就是数字化要解决的问题。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;对于企业而言，数字化转型早已经是一个绕不开的话题。到底什么是数字化转型？好像很少有人说清楚，今天看到一篇文章，还不错，转给大家看看。&lt;/p&gt;</summary>
    
    
    
    <category term="随想杂谈" scheme="https://jamesyyang.github.io/categories/%E9%9A%8F%E6%83%B3%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="数字化转型" scheme="https://jamesyyang.github.io/tags/%E6%95%B0%E5%AD%97%E5%8C%96%E8%BD%AC%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>如何说清楚软件架构</title>
    <link href="https://jamesyyang.github.io/2023/04/08/cognition-how-communication-architecture/"/>
    <id>https://jamesyyang.github.io/2023/04/08/cognition-how-communication-architecture/</id>
    <published>2023-04-08T05:14:08.000Z</published>
    <updated>2023-04-08T05:44:24.402Z</updated>
    
    <content type="html"><![CDATA[<p>最近参加了几次设计评审，感觉大家对如何说清楚一个系统架构不是很清楚。很多同学上来就讲表结构，或者上来就讲API接口文档。也不知道参会的其他同学是什么感觉，反正我是听得一头雾水。</p><p>那么怎么才能说清楚一个软件架构呢？</p><span id="more"></span><h3 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a>架构图</h3><p>我猜很多人肯定会想到画图呀，架构图。没错，关键是怎么画呢？</p><p>在这里，介绍一个<a href="https://c4model.com/">C4模型</a>。</p><p>C4模型是一种用于可视化软件架构的方法，它由Simon Brown提出，旨在帮助软件开发团队描述和沟通软件架构，无论是在前期设计阶段还是在回顾现有代码库时。C4模型的名称来源于它包含的<code>四种抽象层次</code>：Context（上下文）、Container（容器）、Component（组件）和Code（代码）。</p><p><code>Context层</code>描述了软件系统所处的环境和范围，以及与之交互的人员和其他系统。Context层可以用一个系统上下文图来表示，显示出软件系统的名称、边界、职责、用户和外部依赖。</p><p><code>Container层</code>放大了软件系统内部，展示了系统由哪些高级技术构建块组成，例如Web应用程序、移动应用程序、数据库、消息队列等。Container层可以用一个容器图来表示，显示出容器的名称、类型、技术选择、职责和关系。</p><p><code>Component层</code>进一步放大了容器内部，展示了容器由哪些组件组成，以及组件之间是如何协作的。组件可以根据不同的标准进行划分，例如职责、功能、模式或者框架。Component层可以用一个组件图来表示，显示出组件的名称、类型、职责和关系。</p><p><code>Code层</code>最终放大了组件内部，展示了组件是如何实现的。Code层可以用一个代码图来表示，例如UML类图，显示出类的名称、属性、方法和关系。</p><p>每一个层次它都有一种类型的图，具体可以去官网看一下。四个层次的关系大概是这样</p><img src="/images/c4.png" class="" width="800"><h3 id="结构层次"><a href="#结构层次" class="headerlink" title="结构层次"></a>结构层次</h3><p>所以，软件架构属于用来说清楚一个事物的结构的，而C4模型告诉我们，<code>谈结构的时候一定要说清楚在什么样的抽象层次来谈</code>。这非常的重要。</p><p>现实生活中，很常见的说层次结构的图就是<code>地图</code>。而每张地图上面一定会有一个<code>比例尺</code>，比例尺其实就告诉了我们这个地图是在什么样的一个抽象层次上来描述地理位置。</p><p>我们通过地图来查找一个地方的时候，也通常会从一个抽象层次较高的位置开始，逐层展开。这符合人的思维习惯，由高至低，由大到小。</p><p>C4模型其实就是干了这么一个事，只不过它明确了架构图应该有的几个层次是什么，如果大家都follow这么一个规范，那么交流架构会变的比较轻松。</p><h3 id="更进一步"><a href="#更进一步" class="headerlink" title="更进一步"></a>更进一步</h3><p>我们把这个话题再推进一步，其实要说清楚任何一个事情都是有技巧的。</p><p>如果你是要解释一个解决问题的方案，那么可以遵循：SCQA框架。</p><p>如果你是在讲一个故事，那么可以抓住：时间，地点，人物，情节。</p><p>如果你是在表达一个观点，那么可以围绕：论点，论据，结论。</p><p>…………</p><p>那么再进一步，如果你要说清楚一个事，请抓住它的<code>脉络</code>。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近参加了几次设计评审，感觉大家对如何说清楚一个系统架构不是很清楚。很多同学上来就讲表结构，或者上来就讲API接口文档。也不知道参会的其他同学是什么感觉，反正我是听得一头雾水。&lt;/p&gt;
&lt;p&gt;那么怎么才能说清楚一个软件架构呢？&lt;/p&gt;</summary>
    
    
    
    <category term="认知杂说" scheme="https://jamesyyang.github.io/categories/%E8%AE%A4%E7%9F%A5%E6%9D%82%E8%AF%B4/"/>
    
    
    <category term="架构" scheme="https://jamesyyang.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>图说HTTP</title>
    <link href="https://jamesyyang.github.io/2023/03/19/deep-http/"/>
    <id>https://jamesyyang.github.io/2023/03/19/deep-http/</id>
    <published>2023-03-19T00:40:27.000Z</published>
    <updated>2023-03-19T00:43:01.311Z</updated>
    
    <content type="html"><![CDATA[<p>你了解HTTP吗？包括哪些内容呢？</p><span id="more"></span><img src="/images/full-http.png" class="" width="1200">]]></content>
    
    
    <summary type="html">&lt;p&gt;你了解HTTP吗？包括哪些内容呢？&lt;/p&gt;</summary>
    
    
    
    <category term="深入理解" scheme="https://jamesyyang.github.io/categories/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/"/>
    
    
    <category term="HTTP" scheme="https://jamesyyang.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>ChatGPT为什么是现在出来</title>
    <link href="https://jamesyyang.github.io/2023/03/18/thinking-why-chatgpt/"/>
    <id>https://jamesyyang.github.io/2023/03/18/thinking-why-chatgpt/</id>
    <published>2023-03-18T06:04:59.000Z</published>
    <updated>2023-03-18T07:41:00.587Z</updated>
    
    <content type="html"><![CDATA[<p>ChatGPT 4.0来了，所以想继续聊聊这个话题。但是我想换个角度来看这个问题。</p><span id="more"></span><p>ChatGPT的诞生到底是技术发展到这个阶段的必然产物，还是美国故意在这个时候抛出来的概念呢？我认为都是。</p><p>美国从去年开始有经济衰退的苗头，所以接连抛出了元宇宙、ChatGPT两个概念。这是他们解决经济问题的策略，和国内动不动就修路、架桥、盖房子的思路是完全不同的。为什么他们要搞这种虚头八脑的东西，而不搞大基建呢？不是他们不搞，是他们已经过了那个阶段了。</p><p>人类社会经历了漫长的农耕时代，快速经历了工业时代，现在进入共识经济时代。</p><p>农耕时代，财富的定义就是粮食，其他啥也不是。</p><p>进入工业时代，生产力大幅提升，产品可以量产，财富开始迅速累积，人类的物质生活的诉求得到了充分的满足。美国已经走完了工业时代。吃饭有极致的，住房也有极致的，人人都吃成胖子，人人都住别墅，人人都几部车，接下来怎么拉动工业品消费呢？你可以说第三产业也好，你可以说虚拟产品也好，你可以说精神产品也罢，都只能用这些共识消费来拉动需求。</p><p>消费者三年买一次硬件，他可能三天就买一次软件，玩腻了过三天又买新的。所以，面对经济衰退的时候，抛一个元宇宙不行，就继续，再抛一个AI出来。让资本市场愿意继续投入到所谓虚头八脑的行业里。</p><p>什么是共识经济？我特地问了ChatGPT，他说：<code>共识经济是指在数字化时代，人们通过互联网、社交媒体等方式，形成了一种共识，即大家都认为某些事物有价值，从而形成了一种新的经济形态。这种经济形态的特点是，它的价值体系是由大众共同决定的，而不是由少数人或者某个机构决定的。</code></p><p>所以，在共识经济时代里，财富被重新定义了，通过什么重定义？<code>通过大家都觉得，通过共识定义出来的。</code></p><p><strong>共识是什么？集体的想象。</strong> 按照全球的游戏规则，财富总量只增不减，农业品承载不了就只能工业品上，工业品也承载不了了，那只能想象力上。而想象力的本质就是共识。</p><p>说回到国内，中国太大了，去年才完成了脱贫，换句话说，有的地方才刚刚离开农耕时代。而大部分城市可能正处于工业时代，小部分地区已经进入了共识经济时代。</p><p>在这个时代交叉的地带，你会发现事情在发生变化。资本家都纷纷站到了前台，当起了网红。为什么？因为资本在这个时代的话语权已经越来越小，共识的话语权越来越大。<code>谁能得到大家的认可，谁能聚集大家的想象力，谁才能获得财富。</code></p><p>所以，你就能理解网红带货这个现象了。网红本来就自带共识属性，粉丝的多少就决定了他得到的共识有多少。</p><p>零售这个行业可能未来要被改写，商品本身的好坏可能并不是决定性作用，而企业的品牌效应，文化情怀可能会占主导，这直接会决定了消费者对企业本身的认可程度。</p><p>中国人一直是脚踏实地，埋头苦干的形象，这是我们的优势，但是进入共识经济时代，可能这个优势就不在了，我们也需要“<code>抛弃务实，开始务虚</code>”了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;ChatGPT 4.0来了，所以想继续聊聊这个话题。但是我想换个角度来看这个问题。&lt;/p&gt;</summary>
    
    
    
    <category term="随想杂谈" scheme="https://jamesyyang.github.io/categories/%E9%9A%8F%E6%83%B3%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="ChatGPT" scheme="https://jamesyyang.github.io/tags/ChatGPT/"/>
    
  </entry>
  
</feed>
